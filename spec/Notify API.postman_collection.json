{
	"info": {
		"_postman_id": "0a3ff8e9-b9fd-4394-847d-d41030291354",
		"name": "Notify API",
		"description": "\nThe Notify API provides all the tools you need to programmatically submit and manage home move data to the Notify platform.\n\n## What is the Notify Service?\nNotify is a service which informs utilities providers for tenancy changes in the UK. Notify updates the gas, electricity,\nand optionally water, and council providers of change of tenancy information to ensure that the billing periods are correctly managed.\n\n## Who do I contact about this API ?\nTo get in touch with our development team, please send an email to `dev@getnotify.co.uk`\n\n## What is the minimum required information Notify requires?\n\nFor Notify to do its job and for commission to be payable, move-in data must be submitted. This includes the liable party's personal information and the start date of the new tenancy.\n\nWe also allow the optional submission of move out data. This includes the date that the previous tenant moved out of the property and optionally the details of the landlord, who will be responsible during the void period.\n\nIn order to provide move in data, there are 2 options depending on whether you are in possession of the move out data.\n\nIf you are in possession of the move out data, create a void period Vacancy:\n1. Create a Property. (`POST /properties`) The response will contain a `property_id`.\n2. Create a Vacancy, providing a `property_id` and a `move_out_date`. (`POST /vacancies`) The response will contain a `vacancy_id`.\n3. Create a Liable Party for that Vacancy, providing `move_type` of `move_in`. (`POST /vacancies/:vacancyId/liable-parties`)\n4. Update the Vacancy with a `move_in_date`. (`PATCH /vacancies/:vacancyId`)\n\nIf you are not in possession of the move out data, create a move-in-only Vacancy:\n1. Create a Property. (`POST /properties`) The response will contain a `property_id`.\n2. Create a Vacancy, providing a `property_id` and a `move_in_date`. (`POST /vacancies`) The response will contain a `vacancy_id`.\n3. Create a Liable Party for that Vacancy, providing `move_type` of `move_in`. (`POST /vacancies/:vacancyId/liable-parties`)\n\n## What optional additional information can be provided?\n- A Liable Party with the `move_type` of `move_out` (`POST /vacancies/:vacancyId/liable-parties`)\n- Request to inform additional Services.\n> By default only Gas and Electricity are informed, but Water and Council can be added.\n\n## Environments\n\nWe have the following two environments:\n\n### Sandbox\n\nThe sandbox environment is located at [https://sandbox.getnotify.co.uk](https://sandbox.getnotify.co.uk) and the base URL for the sandbox API is [https://sandbox.getnotify.co.uk/api/v1](https://sandbox.getnotify.co.uk/api/v1)\n\nThe sandbox environment is a mirror of the production environment, with the following differences:\n\n- Services are unlikely to be progressed through the Notify process, meaning providers will not be informed of changes to tenancies\n- No emails will be sent to anyone\n- We may periodically clear up created vacancies\n\nIf you have been provided with user credentials, feel free to login to [https://sandbox.getnotify.co.uk](https://sandbox.getnotify.co.uk) as any user to see the Notify dashboard.\n\n> Please do not use any real customer data in the sandbox environment.\n\n### Production\n\nThe production environment is located at [https://dashboard.getnotify.co.uk](https://dashboard.getnotify.co.uk) and the base URL for the production API is [https://dashboard.getnotify.co.uk/api/v1](https://dashboard.getnotify.co.uk/api/v1)\n\nAll production data is completely separate to the sandbox, anything that you do on sandbox will not affect production and vice versa.\n\n## Release Notes\n\nSignificant new features will be documented in our release notes at [https://updates.getnotify.co.uk/](https://updates.getnotify.co.uk/).\n\nTo ensure that you are kept up-to-date with any changes, you can click the 'Subscribe' button in the top-right hand corner of the page.\n\n## Getting Started\n\nTo get started using the Notify API please get in touch with our sales team who will take you through the onboarding process.\n\nWhen it is time for you to integrate with our Sandbox Environment, our development team will help get you started. Get in touch at `dev@getnotify.co.uk`.\n\n**We will create for you**:\n\n- The necessary OAuth 2.0 credentials, consisting of a Client ID, which is required to complete the OAuth 2.0 PKCE Authorization Code flow.\n  - If you require multiple credentials for different environments (local, staging etc.), we will provide these to you.\n- A set of sandbox user accounts to test your integration with.\n\n**We will require from you**:\n\n- At least one redirect URL from your technical team so that we can limit our callbacks to only that URL.\n  - This is a URL owned by yourself that we will forward users to after they successfully grant your application access to their Notify account.\nFor example in local development this may be `http://localhost/notify-redirect`.\n\nOnce you are happy with your integration in the sandbox environment, we will create the necessary production OAuth 2.0 credentials.\n\n## Authentication\n\nNotify uses the standard OAuth 2.0 protocol for authentication and authorization.\n\nYou authenticate on behalf of a Notify user, by using the [PKCE Authorization Code grant type](https://www.oauth.com/oauth2-servers/pkce/). This requires the user to already have a Notify account.\n\nAt a high level, the flow has the following steps:\n- Your application (web/mobile) opens a browser to send your user to Notify\n- The user sees an authorization prompt and approves your application's request to access their Notify data\n- The user is redirected back to your application with an authorization code in the query string\n- Your application then exchanges the authorization code for a refresh token & an access token, which you can then use to access the Notify API\n\nThe Notify API currently supports the following [scopes](https://oauth.net/2/scope/) to define what access you will have to a Notify users account:\n- `full-access` - Access to all of the user's Notify data (read and write), for the endpoints listed in this documentation.\n\n**We recommend using popular maintained OAuth 2.0 libraries to help you complete the authentication process.** You can find examples here: https://oauth.net/code/\n\nWe list the full steps below for clarity and in case you do not wish to use a library.\n\n### 1. Send the User to Notify\n\nTo begin the flow, your application constructs a URL like the following (with the domain changing depending if you are accessing sandbox or production) and directs the user to that URL.\n```\nhttps://sandbox.getnotify.co.uk/oauth/authorize\n?response_type=code\n&client_id=920595b6-9cb7-4196-a7af-e506752727a3\n&redirect_uri=https%3A%2F%2Fexample-app.com%2Fredirect\n&state=UWfIuT0cYB8HZrnrVQ4UNhaoFlxyJTRBZo1lMr18\n&scope=full-access\n&code_challenge_method=S256\n&code_challenge=LoSPps-W3pIYDtmDG8uIAxoxvwbvKlLAb-MqTjYIgVM\n```\nHere's each query parameter explained:\n- `response_type=code` - This indicates you are initiating the authorization code flow.\n- `client_id` - This is the public identifier for your application, which we have provided you.\n- `redirect_uri` - This is where the user will be sent back after they approve/deny the request. You will have provided us with this when getting setup.\n- `state` - A random 40 character long string, generated by your application, which will be returned to you after the user authorizes and you will need to check.\n- `scope` - The scope(s) which define what access you will have on the user's account.\n- `code_challenge_method=S256` - This indicates that the `code_challenge` uses SHA256\n- `code_challenge` - You will first generate a cryptographically random string, between 43 and 128 characters, using only alphanumeric characters and `-._~`, which is your **code_verifier** - **keep a record of this**. You then SHA256 hash it, and base64 encode it using URL safe characters, and remove any trailing `=` characters - this is your **code_challenge**.\n\nYou should make sure that you have saved the following variables which will be used later:\n- `state`\n- `code_verifier`\n\n\nFor example:\n**PHP**\n```php\n$verifier_bytes = random_bytes(64);\n$code_verifier = bin2hex($verifier_bytes);\n\n$code_challenge = strtr(rtrim(\n    base64_encode(hash('sha256', $code_verifier, true))\n, '='), '+/', '-_');\n```\n**JavaScript (node.js)**\n```javascript\nconst randomstring = require(\"randomstring\");\nconst crypto = require(\"crypto\");\nconst base64url = require(\"base64url\");\n\nconst code_verifier = randomstring.generate(128);\n\nconst base64Digest = crypto\n.createHash(\"sha256\")\n.update(code_verifier)\n.digest(\"base64\");\n\nconst code_challenge = base64url.fromBase64(base64Digest);\n```\n\nFor more information on this step, see https://www.oauth.com/oauth2-servers/pkce/authorization-request/\n\n### 2. The user authorizes your request\nUpon sending the user to the URL you constructed in step 1, if the user wasn't currently logged in to Notify, they will be prompted to do so. Once logged in, they will be presented with a screen like the following:\n\n![Notify OAuth 2.0 User Consent Screen](https://oub-notify-sandbox-public.s3.eu-west-2.amazonaws.com/docs/Notify+OAuth2+User+Consent.png)\n\n### 3. Redirect back to your application\nWhether they approve, or deny, we will redirect the user back to the `redirect_uri` you specified.\n\nIf they denied access, there will be a `error=access_denied` query parameter present.\n\nIf they approved access, they will be redirected back to your `redirect_uri` like:\n```\nhttps://example-app.com/redirect\n?code=g0ZGZmNjVmOWIjNTk2NTk4ZTYyZGI3\n&state=UWfIuT0cYB8HZrnrVQ4UNhaoFlxyJTRBZo1lMr18\n```\nHere's each query parameter explained:\n- `code` - This is the authorization code generated by Notify. In the next step, you will exchange this for a refresh token & an access token.\n- `state` - This is the state value which you initially sent in step 1. You should verify this matches what you sent, to protect against CSRF and other related attacks.\n\n### 4. Exchange the authorization code for tokens\n\nThe last step is to exchange the authorization code for a refresh token & an access token, which you can use to access the Notify API.\n\nMake a POST request to the token URL, using `Content-Type: application/x-www-form-urlencoded` and placing the parameters in the body:\n```\nPOST https://sandbox.getnotify.co.uk/oauth/token\nContent-Type: application/x-www-form-urlencoded\n...\ngrant_type=authorization_code\n&code=g0ZGZmNjVmOWIjNTk2NTk4ZTYyZGI3\n&redirect_uri=https%3A%2F%2Fexample-app.com%2Fredirect\n&code_verifier=6874f34ffdf612cb435ac0efed5a641723ab88d\n&client_id=920595b6-9cb7-4196-a7af-e506752727a3\n```\nEnsure that the values are URL encoded (you can see an example in the `redirect_uri`).\n\nHere's each request body parameter explained:\n\n- `grant_type=authorization_code` - This tells the token endpoint it is using the Authorization Code flow\n- `code` - This is the authorization code returned to you in step 3.\n- `redirect_uri` - This is your `redirect_uri` you used in step 1.\n- `code_verifier` - This is the **code_verifier** you generated in step 1, **BEFORE** you SHA256 hashed it and base64 URL safe encoded it.\n- `client_id` - This is your `client_id`\n\nIf everything checks out, you will receive a response like the following:\n```\nHTTP/1.1 200 OK\nContent-Type: application/json\nCache-Control: no-store\nPragma: no-cache\n...\n{\n    \"access_token\":\"MTQ0NjJkZmQ5OTM2NDE1ZTZjNGZmZjI3\",\n    \"token_type\":\"Bearer\",\n    \"expires_in\":86400,\n    \"refresh_token\":\"IwOGYzYTlmM2YxOTQ5MGE3YmNmMDFkNTVk\"\n}\n```\n**You should then store the `access_token` and `refresh_token` securely in your application / system.**\n\nThe `access_token` is valid for 24 hours, and the `refresh_token` is long lived (10 years validity).\n\n### Refreshing your access token\n\nOnce your access token expires, you will begin to receive `401 Unauthorized` errors from the Notify API.\n\nTo refresh your access token, make a POST request to the token URL:\n```\nPOST https://sandbox.getnotify.co.uk/oauth/token\nContent-Type: application/x-www-form-urlencoded\n...\ngrant_type=refresh_token\n&client_id=920595b6-9cb7-4196-a7af-e506752727a3\n&refresh_token=IwOGYzYTlmM2YxOTQ5MGE3YmNmMDFkNTVk\n```\n\nYou will receive a response like the following:\n```\nHTTP/1.1 200 OK\nContent-Type: application/json\nCache-Control: no-store\nPragma: no-cache\n...\n{\n\"access_token\":\"JFk85UJkk7QJH744M8IvVu4JFknP\",\n\"token_type\":\"Bearer\",\n\"expires_in\":86400\n}\n```\n\nIt contains your new access token which you should start using.\n\nYour previous access token is revoked.\n\nYour original refresh token is still valid, and can subsequently be used to refresh your new access token.\n\n### Using your access token\n\nWhen you have an access token, you can use it in the request's HTTP header in the format `Authorization: Bearer <access_token>`, for example: `Authorization: Bearer MTQ0NjJkZmQ5OTM2NDE1ZTZjNGZmZjI3`\n\n## User Hierarchy\n\nAll end users belong to a branch, every branch belongs to an organisation and an organisation can have many branches.\n\nWe have 3 distinct user \"roles\" which determine the level of access that user has in both the Notify dashboard and over the API.\n\nThe roles are as follows:\n\n- Organisation Manager - This is the top level administrator account for each organisation, they have the highest level of access and can view all information for every branch within that organisation.\n- Branch Manager - This user has the ability to manage staff members, and do everything a staff member can do.\n- Staff Member - This user has no administrative privileges over either the branch or the organisation, however they can complete the Notify process in full.\n\n# API Features\n\n## JSON:API\n\nOur API follows the JSON:API specification which can be found at [https://jsonapi.org/](https://jsonapi.org/)\n\nWe chose this to enforce consistency across requests & responses, and to take advantage of shared conventions and community built tooling.\n\nSee [https://jsonapi.org/implementations/#client-libraries](https://jsonapi.org/implementations/#client-libraries) for implementations in your language of choice.\n\nWe are planning to release our own Notify API SDKs for the most popular languages.\n\n## Sorting\n\nIndex endpoints are sorted at by the `created_at` timestamp in descending order by default, ensuring that the latest records are returned first.\n\nYou can sort by a different field by passing up the `sort` query parameter and specifying the field name. By default it will sort in ascending order, unless you prefix the field name with a hyphen (`-`).\n\nFor example, to sort vacancies by the most recent upcoming move in dates:\n\n```\nGET https://sandbox.getnotify.co.uk/api/v1/vacancies?sort=-move_in_date\n```\n\nTo see the available sorts for each endpoint, consult the documentation for that endpoint.\n\n## Inclusion\n\nInclusion is a feature of the JSON:API specification used to create compound documents.\nIn other words, you can specify what related resources you would like to include in the response to avoid making multiple network requests.\n\nFor example, to retrieve a Vacancy along with it's related Property:\n\n```\nGET https://sandbox.getnotify.co.uk/api/v1/vacancy/:vacancyId?include=property\n```\n\nYou can include multiple related resources by providing a comma separated list. For example, to retrieve a Vacancy\nalong with it's related Property and Services:\n\n```\nGET https://sandbox.getnotify.co.uk/api/v1/vacancy/:vacancyId?include=property,services\n```\n\nTo see the available includes for each resource (index and show endpoints), consult the documentation for those endpoints.\n\n## Pagination\n\nBy default, all index endpoints are paginated and will return up to 30 items per response.\nTo customise this, you can send up the `page[size]` query parameter and specify the number of items (a positive integer between 1-100).\nIf there are multiple pages of responses, you can control which page you receive by sending up the `page[number]` query parameter and specifying a valid page number.\n\nFor example:\n\n```\nGET https://sandbox.getnotify.co.uk/api/v1/vacancies?page[number]=2&page[size]=50\n```\n\nEach response includes the following pagination information:\n\n```json\n{\n    \"data\": [\n        {\n        ...\n        }\n    ],\n    \"meta\": {\n        \"pagination\": {\n            \"total\": 142,\n            \"count\": 50,\n            \"per_page\": 50,\n            \"current_page\": 2,\n            \"total_pages\": 3\n        }\n    },\n    \"links\": {\n        \"self\": \"https://sandbox.getnotify.co.uk/api/v1/vacancies?page[number]=2&page[size]=50\",\n        \"first\": \"https://sandbox.getnotify.co.uk/api/v1/vacancies?page[number]=1&page[size]=50\",\n        \"last\": \"https://sandbox.getnotify.co.uk/api/v1/vacancies?page[number]=3&page[size]=50\",\n        \"prev\": \"https://sandbox.getnotify.co.uk/api/v1/vacancies?page[number]=1&page[size]=50\",\n        \"next\": \"https://sandbox.getnotify.co.uk/api/v1/vacancies?page[number]=3&page[size]=50\"\n    }\n}\n```\n\nYou can use the links contained in the links object directly, and the pagination key within the meta object provides other useful pagination information to help you build your application.\n\n## Dates\n\nWe handle both Dates & Timestamps consistently across all of our requests and responses.\n\nDates are accepted & provided in `Y-m-d` format. For example `2020-05-02`.\n\nTimestamps are returned in [ISO8601](https://en.wikipedia.org/wiki/ISO_8601) Zulu Time format. For example `2020-11-25T09:52:36Z`. Format: `Y-m-d\\TH:i:s\\Z`\n\n## Versioning\n\nThe Notify API is continuously evolving as we offer new features and coverage to our API consumers.\n\nIt's important to us that your integration is not adversely affected by changes we may need to make to our API.\n\nWe use API wide versioning, specified in the URL. The version number is specified in the base URL, following `/api/` and preceding the resource name.\n\n### Breaking changes\n\nA breaking change refers to any change that would require you to update your application in order to continue working with the Notify API as originally intended.\n\nWe consider the following to be breaking changes:\n\n- Renaming an API field or resource\n- Removing an API field or resource\n- Changes to the required fields for an endpoint\n\nIf we are intending on making a breaking change, we will communicate this ahead of time to ensure you are able to make the changes in your integration.\n\n### Non-breaking changes\n\nWe reserve the right to make additive changes to our API without incrementing the version number or notifying clients.\nWe may add new resources, fields, and relationships to an existing version of the API and these will not be considered breaking changes.\n\nWe will, however, update our API documentation explaining the purpose of the changes.\n\n**As such, you should design your integration to be flexible enough to not break when new fields are added to resources.**\n\n## Errors\n\nAll errors returned by the API follow the same structure. We do not list every possible error response for each endpoint.\nInstead the common error responses are listed below.\n\n### 401 Unauthorized\n\nThis error is returned when the OAuth 2.0 authorization credentials provided are invalid. This may be due to no\ncredentials being provided, invalid credentials, the wrong header being used, or an invalid / expired access token.\n```json\n{\n    \"errors\": [\n        {\n            \"status\": 401,\n            \"title\": \"Unauthorized\",\n            \"detail\": \"Unauthenticated.\",\n            \"meta\": {\n                \"request_id\": \"d81caeb16bc81000935fadf3a704a064ccb57548\"\n            }\n        }\n    ]\n}\n```\n### 403 Forbidden\nThis error is returned when the user you have authenticated as lacks the necessary permissions to perform the request.\nConsult the description of the individual endpoint for more information on what permissions may be required.\n```json\n{\n    \"errors\": [\n        {\n            \"status\": 403,\n            \"title\": \"Client error\",\n            \"detail\": \"This action is unauthorized.\",\n            \"meta\": {\n                \"request_id\": \"d81caeb16bc81000935fadf3a704a064ccb57548\"\n            }\n        }\n    ]\n}\n```\n### 422 Unprocessable Entity\nThis error is returned when the request body you have provided contains validation errors.\nIf there are multiple validation errors, then the errors array will contain one error object per error, which you can\niterate through.\n```json\n{\n    \"errors\": [\n        {\n            \"status\": 422,\n            \"title\": \"Invalid Attribute\",\n            \"detail\": \"The example_1 field is required.\",\n            \"source\": {\n                \"pointer\": \"/data/attributes/example_1\",\n                \"attribute\": \"data.attributes.example_1\"\n            },\n            \"meta\": {\n                \"request_id\": \"0e784fd4e70549d89d8bc71e3d93fe26d313a9c9\"\n            }\n        },\n        {\n            \"status\": 422,\n            \"title\": \"Invalid Attribute\",\n            \"detail\": \"The example_2 may not be greater than 7 characters.\",\n            \"source\": {\n                \"pointer\": \"/data/attributes/example_2\",\n                \"attribute\": \"data.attributes.example_2\"\n            },\n            \"meta\": {\n                \"request_id\": \"0e784fd4e70549d89d8bc71e3d93fe26d313a9c9\"\n            }\n        }\n    ]\n}\n```\n## UUIDs\nFor all of our resource IDs, we use UUIDs following the [UUID version 6 format](https://uuid.ramsey.dev/en/latest/nonstandard/version6.html).\n",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "44185038"
	},
	"item": [
		{
			"name": "liable-parties",
			"item": [
				{
					"name": "vacancies.liable-parties.index",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/vacancies/:vacancyId/liable-parties?sort=-created_at&page[size]=30&page[number]=1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"vacancies",
								":vacancyId",
								"liable-parties"
							],
							"query": [
								{
									"key": "sort",
									"value": "-created_at",
									"description": "Available sorts: `created_at`, `updated_at`"
								},
								{
									"key": "page[size]",
									"value": "30",
									"description": "Size of page for paginated results"
								},
								{
									"key": "page[number]",
									"value": "1",
									"description": "Page number of results"
								}
							],
							"variable": [
								{
									"key": "vacancyId",
									"value": "1eb2da51-f393-6daa-90d5-acde48001122",
									"description": "ID of the Vacancy"
								}
							]
						},
						"description": "Returns a collection of liable-parties.\n\nFor details on the attributes of liable parties, consult the documentation for vacancies.liable-parties.show\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/vacancies/:vacancyId/liable-parties?sort=-created_at&page[size]=30&page[number]=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vacancies",
										":vacancyId",
										"liable-parties"
									],
									"query": [
										{
											"key": "sort",
											"value": "-created_at",
											"description": "Available sorts: `created_at`, `updated_at`"
										},
										{
											"key": "page[size]",
											"value": "30",
											"description": "Size of page for paginated results"
										},
										{
											"key": "page[number]",
											"value": "1",
											"description": "Page number of results"
										}
									],
									"variable": [
										{
											"key": "vacancyId",
											"value": "1eb2da51-f393-6daa-90d5-acde48001122",
											"description": "ID of the Vacancy"
										}
									]
								},
								"description": "Returns a collection of liable-parties.\n\nFor details on the attributes of liable parties, consult the documentation for vacancies.liable-parties.show\n"
							},
							"status": "All Liable Parties will be returned (with pagination).",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/vnd.api+json"
								}
							],
							"cookie": [],
							"body": "{\r\n  \"data\": [\r\n    {\r\n      \"id\": \"1eb2d9f6-dcf3-6a9c-8830-acde48001122\",\r\n      \"type\": \"liable-parties\",\r\n      \"attributes\": {\r\n        \"move_type\": \"move_out\",\r\n        \"title\": \"Mr\",\r\n        \"first_name\": \"Harry\",\r\n        \"last_name\": \"MacNab\",\r\n        \"phone_number\": \"+447700900500\",\r\n        \"country_code\": \"GB\",\r\n        \"email_address\": \"harry.macnab@gmail.com\",\r\n        \"address_line_1\": \"33 Milburn House\",\r\n        \"address_line_2\": \"Honour way\",\r\n        \"address_line_3\": \"Heburn\",\r\n        \"town\": \"Newcastle upon Tyne\",\r\n        \"county\": \"Tyne and Wear\",\r\n        \"postcode\": \"NE65SP\",\r\n        \"created_at\": \"2020-10-21T09:07:25Z\",\r\n        \"updated_at\": \"2020-10-23T14:24:03Z\"\r\n      },\r\n      \"links\": {\r\n        \"self\": \"https://sandbox.getnotify.co.uk/api/v1/vacancies/1eb2da51-f393-6daa-90d5-acde48001122/liable-parties/1eb2d9f6-dcf3-6a9c-8830-acde48001122\"\r\n      }\r\n    }\r\n  ],\r\n  \"links\": {\r\n    \"self\": \"https://sandbox.getnotify.co.uk/api/v1/resource-type?page[number]=3&page[size]=30\",\r\n    \"first\": \"https://sandbox.getnotify.co.uk/api/v1/resource-type?page[number]=1&page[size]=30\",\r\n    \"last\": \"https://sandbox.getnotify.co.uk/api/v1/resource-type?page[number]=5&page[size]=30\",\r\n    \"prev\": \"https://sandbox.getnotify.co.uk/api/v1/resource-type?page[number]=2&page[size]=30\",\r\n    \"next\": \"https://sandbox.getnotify.co.uk/api/v1/resource-type?page[number]=4&page[size]=30\"\r\n  },\r\n  \"meta\": {\r\n    \"pagination\": {\r\n      \"total\": 142,\r\n      \"count\": 30,\r\n      \"per_page\": 30,\r\n      \"current_page\": 3,\r\n      \"total_pages\": 5\r\n    }\r\n  }\r\n}"
						}
					]
				},
				{
					"name": "vacancies.liable-parties.store",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"data\": {\r\n    \"type\": \"liable-parties\",\r\n    \"attributes\": {\r\n      \"first_name\": \"Harry\",\r\n      \"last_name\": \"MacNab\",\r\n      \"phone_number\": \"+447700900500\",\r\n      \"country_code\": \"GB\",\r\n      \"email_address\": \"harry.macnab@gmail.com\",\r\n      \"address_line_1\": \"33 Milburn House\",\r\n      \"postcode\": \"NE65SP\",\r\n      \"move_type\": \"move_out\",\r\n      \"title\": \"Mr\",\r\n      \"address_line_2\": \"Honour way\",\r\n      \"address_line_3\": \"Heburn\",\r\n      \"town\": \"Newcastle upon Tyne\",\r\n      \"county\": \"Tyne and Wear\"\r\n    }\r\n  }\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/vacancies/:vacancyId/liable-parties",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"vacancies",
								":vacancyId",
								"liable-parties"
							],
							"variable": [
								{
									"key": "vacancyId",
									"value": "1eb2da51-f393-6daa-90d5-acde48001122",
									"description": "ID of the Vacancy"
								}
							]
						},
						"description": "Create a new Liable Party resource.\n\nWe have two options for providing the phone number:\n - You can provide the full [E.164](https://en.wikipedia.org/wiki/E.164) number in the phone number field. A country code must still be provided, but if it is unknown, you can simply set it as 'GB'.\n - Alternatively, you can provide the country code in which the phone number is registered in, along with a phone number in nation format.\n    For example; To provide a UK mobile number, the `country_code` and `phone_number` could be set to the following:\n    ```\n        \"country_code\" : \"GB\",\n        \"phone_number\" : \"07700900500\"\n    ```\n    On Notify, we will transform the phone number into the E.164 format by default before it is stored into our database. The above example would become `+447700900500`\n\nWhen an address is provided, the property must be in either England, Scotland or Wales.\n\nAttribute             | Type      | Description\n--------------------- | --------- | ------------\n`move_type`**\\***     | string    | Either `move_out` or `move_in` - see liable-parties description\n`title`               | string    | The title of the liable party\n`first_name`**\\***    | string    | The first name of the liable party\n`last_name`**\\***     | string    | The last name of the liable party\n`country_code`**\\***  | string    | ISO-3166-1 alpha-2 formatted country code for the liable party's phone number or 'GB' if an E.164 phone number is provided and the country code is unknown\n`phone_number`**\\***  | string    | Either E.164 or nation formatted phone number of the liable party, if a country code is provided\n`email_address`**\\*** | string    | Valid email address, we will check that the domain is able to process emails\n`address_line_1`      | string    | Required for `move_out` liable parties. Not required for `move_in`\n`address_line_2`      | string    | Optional for `move_out` liable parties\n`address_line_3`      | string    | Optional for `move_out` liable parties\n`town`                | string    | Required for `move_out` liable parties. Not required for `move_in`\n`county`              | string    | Optional for `move_out` liable parties\n`postcode`            | string    | Required for `move_out` liable parties. Not required for `move_in`\n\n"
					},
					"response": [
						{
							"name": "Response_201",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"data\": {\r\n    \"type\": \"liable-parties\",\r\n    \"attributes\": {\r\n      \"first_name\": \"Harry\",\r\n      \"last_name\": \"MacNab\",\r\n      \"phone_number\": \"+447700900500\",\r\n      \"country_code\": \"GB\",\r\n      \"email_address\": \"harry.macnab@gmail.com\",\r\n      \"address_line_1\": \"33 Milburn House\",\r\n      \"postcode\": \"NE65SP\",\r\n      \"move_type\": \"move_out\",\r\n      \"title\": \"Mr\",\r\n      \"address_line_2\": \"Honour way\",\r\n      \"address_line_3\": \"Heburn\",\r\n      \"town\": \"Newcastle upon Tyne\",\r\n      \"county\": \"Tyne and Wear\"\r\n    }\r\n  }\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/vacancies/:vacancyId/liable-parties",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vacancies",
										":vacancyId",
										"liable-parties"
									],
									"variable": [
										{
											"key": "vacancyId",
											"value": "1eb2da51-f393-6daa-90d5-acde48001122",
											"description": "ID of the Vacancy"
										}
									]
								},
								"description": "Create a new Liable Party resource.\n\nWe have two options for providing the phone number:\n - You can provide the full [E.164](https://en.wikipedia.org/wiki/E.164) number in the phone number field. A country code must still be provided, but if it is unknown, you can simply set it as 'GB'.\n - Alternatively, you can provide the country code in which the phone number is registered in, along with a phone number in nation format.\n    For example; To provide a UK mobile number, the `country_code` and `phone_number` could be set to the following:\n    ```\n        \"country_code\" : \"GB\",\n        \"phone_number\" : \"07700900500\"\n    ```\n    On Notify, we will transform the phone number into the E.164 format by default before it is stored into our database. The above example would become `+447700900500`\n\nWhen an address is provided, the property must be in either England, Scotland or Wales.\n\nAttribute             | Type      | Description\n--------------------- | --------- | ------------\n`move_type`**\\***     | string    | Either `move_out` or `move_in` - see liable-parties description\n`title`               | string    | The title of the liable party\n`first_name`**\\***    | string    | The first name of the liable party\n`last_name`**\\***     | string    | The last name of the liable party\n`country_code`**\\***  | string    | ISO-3166-1 alpha-2 formatted country code for the liable party's phone number or 'GB' if an E.164 phone number is provided and the country code is unknown\n`phone_number`**\\***  | string    | Either E.164 or nation formatted phone number of the liable party, if a country code is provided\n`email_address`**\\*** | string    | Valid email address, we will check that the domain is able to process emails\n`address_line_1`      | string    | Required for `move_out` liable parties. Not required for `move_in`\n`address_line_2`      | string    | Optional for `move_out` liable parties\n`address_line_3`      | string    | Optional for `move_out` liable parties\n`town`                | string    | Required for `move_out` liable parties. Not required for `move_in`\n`county`              | string    | Optional for `move_out` liable parties\n`postcode`            | string    | Required for `move_out` liable parties. Not required for `move_in`\n\n"
							},
							"status": "Returns the created liable party.",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/vnd.api+json"
								}
							],
							"cookie": [],
							"body": "{\r\n  \"data\": {\r\n    \"id\": \"1eb2d9f6-dcf3-6a9c-8830-acde48001122\",\r\n    \"type\": \"liable-parties\",\r\n    \"attributes\": {\r\n      \"move_type\": \"move_out\",\r\n      \"title\": \"Mr\",\r\n      \"first_name\": \"Harry\",\r\n      \"last_name\": \"MacNab\",\r\n      \"phone_number\": \"+447700900500\",\r\n      \"country_code\": \"GB\",\r\n      \"email_address\": \"harry.macnab@gmail.com\",\r\n      \"address_line_1\": \"33 Milburn House\",\r\n      \"address_line_2\": \"Honour way\",\r\n      \"address_line_3\": \"Heburn\",\r\n      \"town\": \"Newcastle upon Tyne\",\r\n      \"county\": \"Tyne and Wear\",\r\n      \"postcode\": \"NE65SP\",\r\n      \"created_at\": \"2020-10-21T09:07:25Z\",\r\n      \"updated_at\": \"2020-10-23T14:24:03Z\"\r\n    },\r\n    \"links\": {\r\n      \"self\": \"https://sandbox.getnotify.co.uk/api/v1/vacancies/1eb2da51-f393-6daa-90d5-acde48001122/liable-parties/1eb2d9f6-dcf3-6a9c-8830-acde48001122\"\r\n    }\r\n  }\r\n}"
						}
					]
				},
				{
					"name": "vacancies.liable-parties.show",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/vacancies/:vacancyId/liable-parties/:liablePartyId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"vacancies",
								":vacancyId",
								"liable-parties",
								":liablePartyId"
							],
							"variable": [
								{
									"key": "vacancyId",
									"value": "1eb2da51-f393-6daa-90d5-acde48001122",
									"description": "ID of the Vacancy"
								},
								{
									"key": "liablePartyId",
									"value": "1eb2d9f6-dcf3-6a9c-8830-acde48001122",
									"description": "ID of the Liable Party"
								}
							]
						},
						"description": "Fetches a single liable party resource.\n\nAttribute        | Type      | Description\n-----------------| --------- | ------------\n`move_type`      | string    | Either `move_out` or `move_in` - see liable-parties description\n`title`          | string    | The title of the liable party, can be `null`\n`first_name`     | string    | The first name of the liable party\n`last_name`      | string    | The last name of the liable party\n`country_code`   | string    | ISO-3166-1 alpha-2 formatted country code for the liable party's phone number\n`phone_number`   | string    | E.164 formatted phone number of the liable party\n`email_address`  | string    | Valid email address that can accept emails\n`address_line_1` | string    | Always present for `move_out` liable parties. Can be `null` for `move_in`\n`address_line_2` | string    | Can be `null`\n`address_line_3` | string    | Can be `null`\n`town`           | string    | Always present for `move_out` liable parties. Can be `null` for `move_in`\n`county`         | string    | Can be `null`\n`postcode`       | string    | Always present for `move_out` liable parties. Can be `null` for `move_in`\n`created_at`     | string    | The datetime (UTC) when the liable party was added to Notify\n`updated_at`     | string    | The datetime (UTC) when the liable party was last updated\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/vacancies/:vacancyId/liable-parties/:liablePartyId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vacancies",
										":vacancyId",
										"liable-parties",
										":liablePartyId"
									],
									"variable": [
										{
											"key": "vacancyId",
											"value": "1eb2da51-f393-6daa-90d5-acde48001122",
											"description": "ID of the Vacancy"
										},
										{
											"key": "liablePartyId",
											"value": "1eb2d9f6-dcf3-6a9c-8830-acde48001122",
											"description": "ID of the Liable Party"
										}
									]
								},
								"description": "Fetches a single liable party resource.\n\nAttribute        | Type      | Description\n-----------------| --------- | ------------\n`move_type`      | string    | Either `move_out` or `move_in` - see liable-parties description\n`title`          | string    | The title of the liable party, can be `null`\n`first_name`     | string    | The first name of the liable party\n`last_name`      | string    | The last name of the liable party\n`country_code`   | string    | ISO-3166-1 alpha-2 formatted country code for the liable party's phone number\n`phone_number`   | string    | E.164 formatted phone number of the liable party\n`email_address`  | string    | Valid email address that can accept emails\n`address_line_1` | string    | Always present for `move_out` liable parties. Can be `null` for `move_in`\n`address_line_2` | string    | Can be `null`\n`address_line_3` | string    | Can be `null`\n`town`           | string    | Always present for `move_out` liable parties. Can be `null` for `move_in`\n`county`         | string    | Can be `null`\n`postcode`       | string    | Always present for `move_out` liable parties. Can be `null` for `move_in`\n`created_at`     | string    | The datetime (UTC) when the liable party was added to Notify\n`updated_at`     | string    | The datetime (UTC) when the liable party was last updated\n"
							},
							"status": "Returns a single liable party.",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/vnd.api+json"
								}
							],
							"cookie": [],
							"body": "{\r\n  \"data\": {\r\n    \"id\": \"1eb2d9f6-dcf3-6a9c-8830-acde48001122\",\r\n    \"type\": \"liable-parties\",\r\n    \"attributes\": {\r\n      \"move_type\": \"move_out\",\r\n      \"title\": \"Mr\",\r\n      \"first_name\": \"Harry\",\r\n      \"last_name\": \"MacNab\",\r\n      \"phone_number\": \"+447700900500\",\r\n      \"country_code\": \"GB\",\r\n      \"email_address\": \"harry.macnab@gmail.com\",\r\n      \"address_line_1\": \"33 Milburn House\",\r\n      \"address_line_2\": \"Honour way\",\r\n      \"address_line_3\": \"Heburn\",\r\n      \"town\": \"Newcastle upon Tyne\",\r\n      \"county\": \"Tyne and Wear\",\r\n      \"postcode\": \"NE65SP\",\r\n      \"created_at\": \"2020-10-21T09:07:25Z\",\r\n      \"updated_at\": \"2020-10-23T14:24:03Z\"\r\n    },\r\n    \"links\": {\r\n      \"self\": \"https://sandbox.getnotify.co.uk/api/v1/vacancies/1eb2da51-f393-6daa-90d5-acde48001122/liable-parties/1eb2d9f6-dcf3-6a9c-8830-acde48001122\"\r\n    }\r\n  }\r\n}"
						}
					]
				}
			],
			"description": "Liable Party entities represent the persons responsible for the bills for a given period. Notify has two types of 'Liable Party', as determined by the `move_type` field.\n\n`move_out` Liable Parties represent the bill payer for the 'void period'. This is typically the Landlord or owner of the Property. Only one such type of Liable Party can be added per Vacancy. This is always optional.\n\n`move_in` Liable Parties represent the incoming tenants. At least one such Liable Party must be created against a Vacancy in order to update the Vacancy with a `move_in_date`. If there are multiple incoming tenants, then they too can be added.\n\nAddress information is required for `move_out` Liable Parties, but not for `move_in` Liable Parties."
		},
		{
			"name": "meter-readings",
			"item": [
				{
					"name": "vacancies.meter-readings.index",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/vacancies/:vacancyId/meter-readings?page[size]=30&page[number]=1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"vacancies",
								":vacancyId",
								"meter-readings"
							],
							"query": [
								{
									"key": "page[size]",
									"value": "30",
									"description": "Size of page for paginated results"
								},
								{
									"key": "page[number]",
									"value": "1",
									"description": "Page number of results"
								}
							],
							"variable": [
								{
									"key": "vacancyId",
									"value": "1eb2da51-f393-6daa-90d5-acde48001122",
									"description": "ID of the Vacancy"
								}
							]
						},
						"description": "Returns a collection of meter readings.\n\nFor details on the attributes of meter readings, consult the documentation for vacancies.meter-readings.show\n\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/vacancies/:vacancyId/meter-readings?page[size]=30&page[number]=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vacancies",
										":vacancyId",
										"meter-readings"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "30",
											"description": "Size of page for paginated results"
										},
										{
											"key": "page[number]",
											"value": "1",
											"description": "Page number of results"
										}
									],
									"variable": [
										{
											"key": "vacancyId",
											"value": "1eb2da51-f393-6daa-90d5-acde48001122",
											"description": "ID of the Vacancy"
										}
									]
								},
								"description": "Returns a collection of meter readings.\n\nFor details on the attributes of meter readings, consult the documentation for vacancies.meter-readings.show\n\n"
							},
							"status": "All meter-readings will be returned (with pagination).",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/vnd.api+json"
								}
							],
							"cookie": [],
							"body": "{\r\n  \"data\": [\r\n    {\r\n      \"id\": \"1eb2da07-c706-637c-ac93-acde48001122\",\r\n      \"type\": \"meter-readings\",\r\n      \"attributes\": {\r\n        \"value\": \"46043\",\r\n        \"secondary_value\": \"46043\",\r\n        \"utility_type\": \"water\",\r\n        \"period\": \"opening\",\r\n        \"created_at\": \"2020-10-23T14:24:03Z\",\r\n        \"updated_at\": \"2020-10-23T14:24:03Z\"\r\n      },\r\n      \"links\": {\r\n        \"self\": \"https://sandbox.getnotify.co.uk/api/v1/vacancies/1eb2da51-f393-6daa-90d5-acde48001122/meter-readings/1eb2da48-4225-6388-a680-acde48001122\"\r\n      }\r\n    }\r\n  ],\r\n  \"links\": {\r\n    \"self\": \"https://sandbox.getnotify.co.uk/api/v1/resource-type?page[number]=3&page[size]=30\",\r\n    \"first\": \"https://sandbox.getnotify.co.uk/api/v1/resource-type?page[number]=1&page[size]=30\",\r\n    \"last\": \"https://sandbox.getnotify.co.uk/api/v1/resource-type?page[number]=5&page[size]=30\",\r\n    \"prev\": \"https://sandbox.getnotify.co.uk/api/v1/resource-type?page[number]=2&page[size]=30\",\r\n    \"next\": \"https://sandbox.getnotify.co.uk/api/v1/resource-type?page[number]=4&page[size]=30\"\r\n  },\r\n  \"meta\": {\r\n    \"pagination\": {\r\n      \"total\": 142,\r\n      \"count\": 30,\r\n      \"per_page\": 30,\r\n      \"current_page\": 3,\r\n      \"total_pages\": 5\r\n    }\r\n  }\r\n}"
						}
					]
				},
				{
					"name": "vacancies.meter-readings.store",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"data\": {\r\n    \"type\": \"meter-readings\",\r\n    \"attributes\": {\r\n      \"value\": \"46043\",\r\n      \"secondary_value\": \"46043\",\r\n      \"utility_type\": \"water\",\r\n      \"period\": \"opening\"\r\n    }\r\n  }\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/vacancies/:vacancyId/meter-readings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"vacancies",
								":vacancyId",
								"meter-readings"
							],
							"variable": [
								{
									"key": "vacancyId",
									"value": "1eb2da51-f393-6daa-90d5-acde48001122",
									"description": "ID of the Vacancy"
								}
							]
						},
						"description": "Create a new meter reading resource.\n\nAttribute             | Type      | Description\n--------------------- | --------- | ------------\n`value`**\\***         | integer   | The value of the main meter dial. Between 5 and 10 digits\n`secondary_value`     | integer   | The value of the (optional) secondary meter dial. Between 5 and 10 digits.\n`period`**\\***        | string    | Either `opening` or `closing`.\n`utility_type`**\\***  | string    | The type of utility the meter reading is for. Either `electricity`, `gas` or `water`.\n"
					},
					"response": [
						{
							"name": "Response_201",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"data\": {\r\n    \"type\": \"meter-readings\",\r\n    \"attributes\": {\r\n      \"value\": \"46043\",\r\n      \"secondary_value\": \"46043\",\r\n      \"utility_type\": \"water\",\r\n      \"period\": \"opening\"\r\n    }\r\n  }\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/vacancies/:vacancyId/meter-readings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vacancies",
										":vacancyId",
										"meter-readings"
									],
									"variable": [
										{
											"key": "vacancyId",
											"value": "1eb2da51-f393-6daa-90d5-acde48001122",
											"description": "ID of the Vacancy"
										}
									]
								},
								"description": "Create a new meter reading resource.\n\nAttribute             | Type      | Description\n--------------------- | --------- | ------------\n`value`**\\***         | integer   | The value of the main meter dial. Between 5 and 10 digits\n`secondary_value`     | integer   | The value of the (optional) secondary meter dial. Between 5 and 10 digits.\n`period`**\\***        | string    | Either `opening` or `closing`.\n`utility_type`**\\***  | string    | The type of utility the meter reading is for. Either `electricity`, `gas` or `water`.\n"
							},
							"status": "Returns the created meter reading.",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/vnd.api+json"
								}
							],
							"cookie": [],
							"body": "{\r\n  \"data\": {\r\n    \"id\": \"1eb2da07-c706-637c-ac93-acde48001122\",\r\n    \"type\": \"meter-readings\",\r\n    \"attributes\": {\r\n      \"value\": \"46043\",\r\n      \"secondary_value\": \"46043\",\r\n      \"utility_type\": \"water\",\r\n      \"period\": \"opening\",\r\n      \"created_at\": \"2020-10-23T14:24:03Z\",\r\n      \"updated_at\": \"2020-10-23T14:24:03Z\"\r\n    },\r\n    \"links\": {\r\n      \"self\": \"https://sandbox.getnotify.co.uk/api/v1/vacancies/1eb2da51-f393-6daa-90d5-acde48001122/meter-readings/1eb2da48-4225-6388-a680-acde48001122\"\r\n    }\r\n  }\r\n}"
						}
					]
				},
				{
					"name": "vacancies.meter-readings.show",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/vacancies/:vacancyId/meter-readings/:meterReadingId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"vacancies",
								":vacancyId",
								"meter-readings",
								":meterReadingId"
							],
							"variable": [
								{
									"key": "vacancyId",
									"value": "1eb2da51-f393-6daa-90d5-acde48001122",
									"description": "ID of the Vacancy"
								},
								{
									"key": "meterReadingId",
									"value": "1eb2da07-c706-637c-ac93-acde48001122",
									"description": "ID of the Meter Reading"
								}
							]
						},
						"description": "Fetches a single meter reading resource.\n\nAttribute        | Type      | Description\n-----------------| --------- | ------------\n`value`          | integer   | The value of the main meter dial.\n`secondary_value`| integer   | The value of the (optional) secondary meter dial.\n`period`         | string    | Either `opening` or `closing`.\n`utility_type`   | string    | The type of utility the meter reading is for. Either `electricity`, `gas` or `water`.\n`created_at`     | string    | The datetime (UTC) when the meter reading was added to Notify\n`updated_at`     | string    | The datetime (UTC) when the meter reading was last updated\n\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/vacancies/:vacancyId/meter-readings/:meterReadingId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vacancies",
										":vacancyId",
										"meter-readings",
										":meterReadingId"
									],
									"variable": [
										{
											"key": "vacancyId",
											"value": "1eb2da51-f393-6daa-90d5-acde48001122",
											"description": "ID of the Vacancy"
										},
										{
											"key": "meterReadingId",
											"value": "1eb2da07-c706-637c-ac93-acde48001122",
											"description": "ID of the Meter Reading"
										}
									]
								},
								"description": "Fetches a single meter reading resource.\n\nAttribute        | Type      | Description\n-----------------| --------- | ------------\n`value`          | integer   | The value of the main meter dial.\n`secondary_value`| integer   | The value of the (optional) secondary meter dial.\n`period`         | string    | Either `opening` or `closing`.\n`utility_type`   | string    | The type of utility the meter reading is for. Either `electricity`, `gas` or `water`.\n`created_at`     | string    | The datetime (UTC) when the meter reading was added to Notify\n`updated_at`     | string    | The datetime (UTC) when the meter reading was last updated\n\n"
							},
							"status": "Returns a single meter reading.",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/vnd.api+json"
								}
							],
							"cookie": [],
							"body": "{\r\n  \"data\": {\r\n    \"id\": \"1eb2da07-c706-637c-ac93-acde48001122\",\r\n    \"type\": \"meter-readings\",\r\n    \"attributes\": {\r\n      \"value\": \"46043\",\r\n      \"secondary_value\": \"46043\",\r\n      \"utility_type\": \"water\",\r\n      \"period\": \"opening\",\r\n      \"created_at\": \"2020-10-23T14:24:03Z\",\r\n      \"updated_at\": \"2020-10-23T14:24:03Z\"\r\n    },\r\n    \"links\": {\r\n      \"self\": \"https://sandbox.getnotify.co.uk/api/v1/vacancies/1eb2da51-f393-6daa-90d5-acde48001122/meter-readings/1eb2da48-4225-6388-a680-acde48001122\"\r\n    }\r\n  }\r\n}"
						}
					]
				}
			],
			"description": "Meter Readings represent an individual reading of an electricity, gas or water meter.\n\nThey are required by providers to ensure accurate billing and are associated to a vacancy.\n\nThe `period` of a meter reading represents the time period on the vacancy that the reading is for:\n- A `closing` reading is the final reading once the tenant has vacated the property.\n- An `opening` reading is the first reading once the move in liable party has moved in.\n\nMeter readings contain either one or two values, depending on whether they are for a dual-rate meter or not.\n\nThe `utility_type` can either be `electricity`, `gas` or `water`. The associated service for the `period` and\n`utility_type` must exist - e.g. if you are attempting to submit a `closing` reading for `water`, then a move out\nwater service must exist for the associated vacancy, otherwise you will receive a validation error."
		},
		{
			"name": "properties",
			"item": [
				{
					"name": "properties.store",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"data\": {\r\n    \"type\": \"properties\",\r\n    \"attributes\": {\r\n      \"address_line_1\": \"100 Grey St\",\r\n      \"postcode\": \"NE16BR\",\r\n      \"address_line_2\": \"Theatre Royal\",\r\n      \"address_line_3\": \"Heaton\",\r\n      \"town\": \"Newcastle upon Tyne\",\r\n      \"county\": \"Tyne and Wear\",\r\n      \"udprn\": 26527635,\r\n      \"umprn\": 100000000001\r\n    }\r\n  }\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/properties",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"properties"
							]
						},
						"description": "Create a new property resource. This endpoint does not support specifying relationships to link to at the time of creation.\n\nUDPRN (Unique Delivery Point Reference Number): An eight-digit numeric code (e.g., 25962203) assigned to each unique delivery point in the UK. It remains constant for a delivery point, even if address details change, ensuring consistent identification for mail delivery and address management.\nUMPRN (Unique Multiple Residence Reference Number): A ten-digit numeric code (e.g., 1234567890) used to identify individual sub-premises within a multiple occupancy building, such as flats within a converted house. These sub-premises share a common delivery point but are distinct residences.\nPassing a UDPRN or UMPRN is entirely optional; however, if either is provided, the fields postcode, town, and address_line_1 are no longer required and will be disregarded if included.\nSupplying only a UDPRN or UMPRN will result in the relevant property address information being automatically populated from the Postcode Address File.\n\nAttribute                  | Type      | Description\n-------------------------- | --------- | ------------\n`address_line_1`**\\***     | string    | The first line of the address\n`address_line_2`           | string    | The second line of the address\n`address_line_3`           | string    | The third line of the address\n`town` **\\***              | string    | The town where the property is located\n`county`                   | string    | The county where the property is located\n`postcode`**\\***           | string    | A valid postcode within England, Scotland or Wales\n`udprn`                    | integer   | The Unique Delivery Point Reference Number for the premises\n`umprn`                    | integer   | The Unique Multiple (Residence) Point Reference Number for the premises\n\n"
					},
					"response": [
						{
							"name": "Response_201",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"data\": {\r\n    \"type\": \"properties\",\r\n    \"attributes\": {\r\n      \"address_line_1\": \"100 Grey St\",\r\n      \"postcode\": \"NE16BR\",\r\n      \"address_line_2\": \"Theatre Royal\",\r\n      \"address_line_3\": \"Heaton\",\r\n      \"town\": \"Newcastle upon Tyne\",\r\n      \"county\": \"Tyne and Wear\",\r\n      \"udprn\": 26527635,\r\n      \"umprn\": 100000000001\r\n    }\r\n  }\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/properties",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"properties"
									]
								},
								"description": "Create a new property resource. This endpoint does not support specifying relationships to link to at the time of creation.\n\nUDPRN (Unique Delivery Point Reference Number): An eight-digit numeric code (e.g., 25962203) assigned to each unique delivery point in the UK. It remains constant for a delivery point, even if address details change, ensuring consistent identification for mail delivery and address management.\nUMPRN (Unique Multiple Residence Reference Number): A ten-digit numeric code (e.g., 1234567890) used to identify individual sub-premises within a multiple occupancy building, such as flats within a converted house. These sub-premises share a common delivery point but are distinct residences.\nPassing a UDPRN or UMPRN is entirely optional; however, if either is provided, the fields postcode, town, and address_line_1 are no longer required and will be disregarded if included.\nSupplying only a UDPRN or UMPRN will result in the relevant property address information being automatically populated from the Postcode Address File.\n\nAttribute                  | Type      | Description\n-------------------------- | --------- | ------------\n`address_line_1`**\\***     | string    | The first line of the address\n`address_line_2`           | string    | The second line of the address\n`address_line_3`           | string    | The third line of the address\n`town` **\\***              | string    | The town where the property is located\n`county`                   | string    | The county where the property is located\n`postcode`**\\***           | string    | A valid postcode within England, Scotland or Wales\n`udprn`                    | integer   | The Unique Delivery Point Reference Number for the premises\n`umprn`                    | integer   | The Unique Multiple (Residence) Point Reference Number for the premises\n\n"
							},
							"status": "Returns the created property.",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/vnd.api+json"
								}
							],
							"cookie": [],
							"body": "{\r\n  \"data\": {\r\n    \"id\": \"123e4567-e89b-12d3-a456-426614174000\",\r\n    \"type\": \"properties\",\r\n    \"attributes\": {\r\n      \"address_line_1\": \"100 Grey St\",\r\n      \"address_line_2\": \"Theatre Royal\",\r\n      \"address_line_3\": \"Heaton\",\r\n      \"town\": \"Newcastle upon Tyne\",\r\n      \"county\": \"Tyne and Wear\",\r\n      \"postcode\": \"NE16BR\",\r\n      \"udprn\": 26527635,\r\n      \"umprn\": 100000000001,\r\n      \"created_at\": \"2020-10-21T09:07:25Z\",\r\n      \"updated_at\": \"2020-10-23T14:24:03Z\"\r\n    },\r\n    \"relationships\": {\r\n      \"meter-points\": {\r\n        \"links\": {\r\n          \"related\": \"https://sandbox.getnotify.co.uk/api/v1/properties/123e4567-e89b-12d3-a456-426614174000/meter-points\"\r\n        }\r\n      }\r\n    },\r\n    \"links\": {\r\n      \"self\": \"https://sandbox.getnotify.co.uk/api/v1/properties/123e4567-e89b-12d3-a456-426614174000\"\r\n    }\r\n  }\r\n}"
						}
					]
				},
				{
					"name": "properties.show",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/properties/:propertyId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"properties",
								":propertyId"
							],
							"variable": [
								{
									"key": "propertyId",
									"value": "123e4567-e89b-12d3-a456-426614174000",
									"description": "ID of the property to fetch"
								}
							]
						},
						"description": "Fetches a single property resource.\n\nAttribute                  | Type      | Description\n-------------------------- | --------- | ------------\n`address_line_1`           | string    | The first line of the address\n`address_line_2`           | string    | The second line of the address, can be `null`\n`address_line_3`           | string    | The third line of the address, can be `null`\n`town`                     | string    | The town where the property is located\n`county`                   | string    | The county where the property is located, can be `null`\n`postcode`                 | string    | A valid postcode within England, Scotland or Wales\n`udprn`                    | integer   | The Unique Delivery Point Reference Number for the premises\n`created_at`               | string    | The datetime (UTC) when the property was added to Notify\n`updated_at`               | string    | The datetime (UTC) when the property was last updated\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/properties/:propertyId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"properties",
										":propertyId"
									],
									"variable": [
										{
											"key": "propertyId",
											"value": "123e4567-e89b-12d3-a456-426614174000",
											"description": "ID of the property to fetch"
										}
									]
								},
								"description": "Fetches a single property resource.\n\nAttribute                  | Type      | Description\n-------------------------- | --------- | ------------\n`address_line_1`           | string    | The first line of the address\n`address_line_2`           | string    | The second line of the address, can be `null`\n`address_line_3`           | string    | The third line of the address, can be `null`\n`town`                     | string    | The town where the property is located\n`county`                   | string    | The county where the property is located, can be `null`\n`postcode`                 | string    | A valid postcode within England, Scotland or Wales\n`udprn`                    | integer   | The Unique Delivery Point Reference Number for the premises\n`created_at`               | string    | The datetime (UTC) when the property was added to Notify\n`updated_at`               | string    | The datetime (UTC) when the property was last updated\n"
							},
							"status": "Returns a single property.",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/vnd.api+json"
								}
							],
							"cookie": [],
							"body": "{\r\n  \"data\": {\r\n    \"id\": \"123e4567-e89b-12d3-a456-426614174000\",\r\n    \"type\": \"properties\",\r\n    \"relationships\": {\r\n      \"meter-points\": {\r\n        \"links\": {\r\n          \"related\": \"https://sandbox.getnotify.co.uk/api/v1/properties/123e4567-e89b-12d3-a456-426614174000/meter-points\"\r\n        }\r\n      }\r\n    },\r\n    \"attributes\": {\r\n      \"address_line_1\": \"100 Grey St\",\r\n      \"address_line_2\": \"Theatre Royal\",\r\n      \"address_line_3\": \"Heaton\",\r\n      \"town\": \"Newcastle upon Tyne\",\r\n      \"county\": \"Tyne and Wear\",\r\n      \"postcode\": \"NE16BR\",\r\n      \"udprn\": 26527635,\r\n      \"umprn\": 100000000001,\r\n      \"created_at\": \"2020-10-21T09:07:25Z\",\r\n      \"updated_at\": \"2020-10-23T14:24:03Z\"\r\n    },\r\n    \"links\": {\r\n      \"self\": \"https://sandbox.getnotify.co.uk/api/v1/properties/123e4567-e89b-12d3-a456-426614174000\"\r\n    }\r\n  }\r\n}"
						}
					]
				}
			],
			"description": "Property entities represent a UK address. A valid `property_id` is required in order to create a Vacancy."
		},
		{
			"name": "services",
			"item": [
				{
					"name": "vacancies.services.index",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/vacancies/:vacancyId/services?sort=-created_at&page[size]=30&page[number]=1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"vacancies",
								":vacancyId",
								"services"
							],
							"query": [
								{
									"key": "sort",
									"value": "-created_at",
									"description": "Available sorts: `found_at`, `find_abandoned_at`, `created_at`, `updated_at`"
								},
								{
									"key": "page[size]",
									"value": "30",
									"description": "Size of page for paginated results"
								},
								{
									"key": "page[number]",
									"value": "1",
									"description": "Page number of results"
								}
							],
							"variable": [
								{
									"key": "vacancyId",
									"value": "1eb2da51-f393-6daa-90d5-acde48001122",
									"description": "ID of the Vacancy"
								}
							]
						},
						"description": "Returns a collection of services.\n\nFor details on the attributes of Services, consult the documentation for vacancies.services.show\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/vacancies/:vacancyId/services?sort=-created_at&page[size]=30&page[number]=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vacancies",
										":vacancyId",
										"services"
									],
									"query": [
										{
											"key": "sort",
											"value": "-created_at",
											"description": "Available sorts: `found_at`, `find_abandoned_at`, `created_at`, `updated_at`"
										},
										{
											"key": "page[size]",
											"value": "30",
											"description": "Size of page for paginated results"
										},
										{
											"key": "page[number]",
											"value": "1",
											"description": "Page number of results"
										}
									],
									"variable": [
										{
											"key": "vacancyId",
											"value": "1eb2da51-f393-6daa-90d5-acde48001122",
											"description": "ID of the Vacancy"
										}
									]
								},
								"description": "Returns a collection of services.\n\nFor details on the attributes of Services, consult the documentation for vacancies.services.show\n"
							},
							"status": "All services will be returned (with pagination).",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/vnd.api+json"
								}
							],
							"cookie": [],
							"body": "{\r\n  \"data\": [\r\n    {\r\n      \"id\": \"1eb2da48-4225-6388-a680-acde48001122\",\r\n      \"type\": \"services\",\r\n      \"relationships\": {\r\n        \"tasks\": {\r\n          \"links\": {\r\n            \"related\": \"https://sandbox.getnotify.co.uk/api/v1/vacancies/1eb2da51-f393-6daa-90d5-acde48001122/services/1eb2da48-4225-6388-a680-acde48001122/tasks\"\r\n          }\r\n        },\r\n        \"provider\": {\r\n          \"links\": {\r\n            \"related\": \"https://sandbox.getnotify.co.uk/api/v1/vacancies/1eb2da51-f393-6daa-90d5-acde48001122/services/1eb2da48-4225-6388-a680-acde48001122/provider\"\r\n          }\r\n        }\r\n      },\r\n      \"attributes\": {\r\n        \"move_type\": \"move_out\",\r\n        \"utility_type\": \"water\",\r\n        \"state\": \"found\",\r\n        \"status\": \"pending\",\r\n        \"message\": \"The provider has not been informed yet\",\r\n        \"found_at\": \"2020-10-23T14:24:03Z\",\r\n        \"found_by\": \"1eb2da50-04bf-6ae0-a896-acde48001122\",\r\n        \"provider_id\": \"1eb2da0f-524f-6d50-af10-acde48001122\",\r\n        \"provider_name\": \"Northumbrian Water\",\r\n        \"find_abandoned_at\": \"2020-10-23T14:24:03Z\",\r\n        \"find_abandoned_by\": \"1eb2da50-04bf-6ae0-a896-acde48001122\",\r\n        \"find_abandoned_reason\": \"Unable to find water provider\",\r\n        \"created_at\": \"2020-10-23T14:24:03Z\",\r\n        \"updated_at\": \"2020-10-23T14:24:03Z\"\r\n      },\r\n      \"links\": {\r\n        \"self\": \"https://sandbox.getnotify.co.uk/api/v1/vacancies/1eb2da51-f393-6daa-90d5-acde48001122/services/1eb2da48-4225-6388-a680-acde48001122\"\r\n      }\r\n    }\r\n  ],\r\n  \"links\": {\r\n    \"self\": \"https://sandbox.getnotify.co.uk/api/v1/resource-type?page[number]=3&page[size]=30\",\r\n    \"first\": \"https://sandbox.getnotify.co.uk/api/v1/resource-type?page[number]=1&page[size]=30\",\r\n    \"last\": \"https://sandbox.getnotify.co.uk/api/v1/resource-type?page[number]=5&page[size]=30\",\r\n    \"prev\": \"https://sandbox.getnotify.co.uk/api/v1/resource-type?page[number]=2&page[size]=30\",\r\n    \"next\": \"https://sandbox.getnotify.co.uk/api/v1/resource-type?page[number]=4&page[size]=30\"\r\n  },\r\n  \"meta\": {\r\n    \"pagination\": {\r\n      \"total\": 142,\r\n      \"count\": 30,\r\n      \"per_page\": 30,\r\n      \"current_page\": 3,\r\n      \"total_pages\": 5\r\n    }\r\n  }\r\n}"
						}
					]
				},
				{
					"name": "vacancies.services.store",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"data\": {\r\n    \"type\": \"services\",\r\n    \"attributes\": {\r\n      \"move_type\": \"move_out\",\r\n      \"utility_type\": \"water\"\r\n    }\r\n  }\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/vacancies/:vacancyId/services",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"vacancies",
								":vacancyId",
								"services"
							],
							"variable": [
								{
									"key": "vacancyId",
									"value": "1eb2da51-f393-6daa-90d5-acde48001122",
									"description": "ID of the Vacancy"
								}
							]
						},
						"description": "Create a new service resource. This endpoint does not support specifying\nrelationships to link to at the time of creation.\n\nAttribute             | Type      | Description\n----------------------| --------- | ------------\n`move_type`**\\***     | string    | Either `move_in` or `move_out`. 'move_in' type Services can only be created after the parent Vacancy has been updated with a `move_in_date`.\n`utility_type`**\\***  | string    | Either `electricity`, `gas`, `water` or `council`. You can't create multiple services, of the same `utility_type` and `move_type` for a Vacancy (e.g. 2 `electricity` `move_in` Services).\n\n"
					},
					"response": [
						{
							"name": "Response_201",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"data\": {\r\n    \"type\": \"services\",\r\n    \"attributes\": {\r\n      \"move_type\": \"move_out\",\r\n      \"utility_type\": \"water\"\r\n    }\r\n  }\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/vacancies/:vacancyId/services",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vacancies",
										":vacancyId",
										"services"
									],
									"variable": [
										{
											"key": "vacancyId",
											"value": "1eb2da51-f393-6daa-90d5-acde48001122",
											"description": "ID of the Vacancy"
										}
									]
								},
								"description": "Create a new service resource. This endpoint does not support specifying\nrelationships to link to at the time of creation.\n\nAttribute             | Type      | Description\n----------------------| --------- | ------------\n`move_type`**\\***     | string    | Either `move_in` or `move_out`. 'move_in' type Services can only be created after the parent Vacancy has been updated with a `move_in_date`.\n`utility_type`**\\***  | string    | Either `electricity`, `gas`, `water` or `council`. You can't create multiple services, of the same `utility_type` and `move_type` for a Vacancy (e.g. 2 `electricity` `move_in` Services).\n\n"
							},
							"status": "Returns the created service.",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/vnd.api+json"
								}
							],
							"cookie": [],
							"body": "{\r\n  \"data\": {\r\n    \"id\": \"1eb2da48-4225-6388-a680-acde48001122\",\r\n    \"type\": \"services\",\r\n    \"attributes\": {\r\n      \"move_type\": \"move_out\",\r\n      \"utility_type\": \"water\",\r\n      \"state\": \"found\",\r\n      \"status\": \"pending\",\r\n      \"message\": \"The provider has not been informed yet\",\r\n      \"found_at\": \"2020-10-23T14:24:03Z\",\r\n      \"found_by\": \"1eb2da50-04bf-6ae0-a896-acde48001122\",\r\n      \"provider_id\": \"1eb2da0f-524f-6d50-af10-acde48001122\",\r\n      \"provider_name\": \"Northumbrian Water\",\r\n      \"find_abandoned_at\": \"2020-10-23T14:24:03Z\",\r\n      \"find_abandoned_by\": \"1eb2da50-04bf-6ae0-a896-acde48001122\",\r\n      \"find_abandoned_reason\": \"Unable to find water provider\",\r\n      \"created_at\": \"2020-10-23T14:24:03Z\",\r\n      \"updated_at\": \"2020-10-23T14:24:03Z\"\r\n    },\r\n    \"links\": {\r\n      \"self\": \"https://sandbox.getnotify.co.uk/api/v1/vacancies/1eb2da51-f393-6daa-90d5-acde48001122/services/1eb2da48-4225-6388-a680-acde48001122\"\r\n    }\r\n  }\r\n}"
						}
					]
				},
				{
					"name": "vacancy.services.show",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/vacancies/:vacancyId/services/:serviceId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"vacancies",
								":vacancyId",
								"services",
								":serviceId"
							],
							"variable": [
								{
									"key": "vacancyId",
									"value": "1eb2da51-f393-6daa-90d5-acde48001122",
									"description": "ID of the Vacancy"
								},
								{
									"key": "serviceId",
									"value": "1eb2da48-4225-6388-a680-acde48001122",
									"description": "ID of the Service"
								}
							]
						},
						"description": "Fetches a single service resource.\n\nAttribute               | Type      | Description\n------------------------| --------- | ------------\n`move_type`             | string    | Either `move_in` or `move_out`\n`utility_type`          | string    | Either `electricity`, `gas`, `water` or `council`\n`state`                 | string    | Either `abandoned`, `found` or `pending`\n`status`                | string    | Either `abandoned`, `edit`, `completed`, `pending`, `retry` or `not_completed`\n`message`               | string    | A simple message describing the status of this Service\n`found_at`              | string    | The datetime (UTC) when the provider was found, can be `null`\n`found_by`              | string    | The user id of the Notify admin who found the service, can be `null`\n`provider_id`           | string    | The id of the provider for the utility, can be `null`\n`provider_name`         | string    | The name of the provider. This will be `null` until the provider is found and the `move_in_date` of the associated Vacancy is no more than 2 days in the future\n`find_abandoned_at`     | string    | The datetime (UTC) when the attempt to find the provider was abandoned, can be `null`\n`find_abandoned_reason` | string    | The reason why the find was abandoned, can be `null`\n`find_abandoned_by`     | string    | The user id of the Notify admin who abandoned the find, can be `null`\n`created_at`            | string    | The datetime (UTC) when the Service was added to Notify\n`updated_at`            | string    | The datetime (UTC) when the Service was last updated\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/vacancies/:vacancyId/services/:serviceId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vacancies",
										":vacancyId",
										"services",
										":serviceId"
									],
									"variable": [
										{
											"key": "vacancyId",
											"value": "1eb2da51-f393-6daa-90d5-acde48001122",
											"description": "ID of the Vacancy"
										},
										{
											"key": "serviceId",
											"value": "1eb2da48-4225-6388-a680-acde48001122",
											"description": "ID of the Service"
										}
									]
								},
								"description": "Fetches a single service resource.\n\nAttribute               | Type      | Description\n------------------------| --------- | ------------\n`move_type`             | string    | Either `move_in` or `move_out`\n`utility_type`          | string    | Either `electricity`, `gas`, `water` or `council`\n`state`                 | string    | Either `abandoned`, `found` or `pending`\n`status`                | string    | Either `abandoned`, `edit`, `completed`, `pending`, `retry` or `not_completed`\n`message`               | string    | A simple message describing the status of this Service\n`found_at`              | string    | The datetime (UTC) when the provider was found, can be `null`\n`found_by`              | string    | The user id of the Notify admin who found the service, can be `null`\n`provider_id`           | string    | The id of the provider for the utility, can be `null`\n`provider_name`         | string    | The name of the provider. This will be `null` until the provider is found and the `move_in_date` of the associated Vacancy is no more than 2 days in the future\n`find_abandoned_at`     | string    | The datetime (UTC) when the attempt to find the provider was abandoned, can be `null`\n`find_abandoned_reason` | string    | The reason why the find was abandoned, can be `null`\n`find_abandoned_by`     | string    | The user id of the Notify admin who abandoned the find, can be `null`\n`created_at`            | string    | The datetime (UTC) when the Service was added to Notify\n`updated_at`            | string    | The datetime (UTC) when the Service was last updated\n"
							},
							"status": "Returns a single service.",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/vnd.api+json"
								}
							],
							"cookie": [],
							"body": "{\r\n  \"data\": {\r\n    \"id\": \"1eb2da48-4225-6388-a680-acde48001122\",\r\n    \"type\": \"services\",\r\n    \"relationships\": {\r\n      \"tasks\": {\r\n        \"links\": {\r\n          \"related\": \"https://sandbox.getnotify.co.uk/api/v1/vacancies/1eb2da51-f393-6daa-90d5-acde48001122/services/1eb2da48-4225-6388-a680-acde48001122/tasks\"\r\n        }\r\n      },\r\n      \"provider\": {\r\n        \"links\": {\r\n          \"related\": \"https://sandbox.getnotify.co.uk/api/v1/vacancies/1eb2da51-f393-6daa-90d5-acde48001122/services/1eb2da48-4225-6388-a680-acde48001122/provider\"\r\n        }\r\n      }\r\n    },\r\n    \"attributes\": {\r\n      \"move_type\": \"move_out\",\r\n      \"utility_type\": \"water\",\r\n      \"state\": \"found\",\r\n      \"status\": \"pending\",\r\n      \"message\": \"The provider has not been informed yet\",\r\n      \"found_at\": \"2020-10-23T14:24:03Z\",\r\n      \"found_by\": \"1eb2da50-04bf-6ae0-a896-acde48001122\",\r\n      \"provider_id\": \"1eb2da0f-524f-6d50-af10-acde48001122\",\r\n      \"provider_name\": \"Northumbrian Water\",\r\n      \"find_abandoned_at\": \"2020-10-23T14:24:03Z\",\r\n      \"find_abandoned_by\": \"1eb2da50-04bf-6ae0-a896-acde48001122\",\r\n      \"find_abandoned_reason\": \"Unable to find water provider\",\r\n      \"created_at\": \"2020-10-23T14:24:03Z\",\r\n      \"updated_at\": \"2020-10-23T14:24:03Z\"\r\n    },\r\n    \"links\": {\r\n      \"self\": \"https://sandbox.getnotify.co.uk/api/v1/vacancies/1eb2da51-f393-6daa-90d5-acde48001122/services/1eb2da48-4225-6388-a680-acde48001122\"\r\n    }\r\n  }\r\n}"
						}
					]
				}
			],
			"description": "Services represent the Notify process for informing Utility Providers & Councils of a change in tenancy. Similar to Liable Parties, there are two main types of Service, as determined by the `move_type`.\n\n`move_out` services represent the Notify process of informing the utility providers that the incumbent occupier is leaving.\n\n`move_in` Services represent the Notify process of informing utility providers of the new tenants. These can only be created after the Vacancy has been updated with a `move_in_date` field.\n\nBy default, Notify will find & inform both the Gas & Electricity provider for every Vacancy. For this reason, a `move_out` Gas Service & a `move_out` Electricity Service will both be created automatically when a Vacancy is created. Similarly, a `move_in` Gas Service & `move_in` Electricity Service will be created when updating a Vacancy with a `move_in_date`.\n\nWater & Council 'Services' are optional. If you wish to instruct Notify to inform the Water & Council providers of a change of tenancy, you may create new Services with the relevant `move_type` & `utility_type`.\n\nThe information returned when fetching Services is sufficient to provide a general overview of the Notify process back to the end user."
		},
		{
			"name": "vacancies",
			"item": [
				{
					"name": "vacancies.index",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/vacancies?include=services&sort=-created_at&page[size]=30&page[number]=1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"vacancies"
							],
							"query": [
								{
									"key": "include",
									"value": "services",
									"description": "List of related resources to include. `property`, `services`, `vacancy-metadata` and `liable-parties` are supported."
								},
								{
									"key": "sort",
									"value": "-created_at",
									"description": "Available sorts: `move_out_date`, `move_in_date`, `move_out_submitted_date`, `move_in_submitted_date`, `created_at`, `updated_at`"
								},
								{
									"key": "page[size]",
									"value": "30",
									"description": "Size of page for paginated results"
								},
								{
									"key": "page[number]",
									"value": "1",
									"description": "Page number of results"
								}
							]
						},
						"description": "Returns a collection of Vacancies.\n\nFor details on the attributes of Vacancies, consult the documentation for vacancies.show\n\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/vacancies?include=services&sort=-created_at&page[size]=30&page[number]=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vacancies"
									],
									"query": [
										{
											"key": "include",
											"value": "services",
											"description": "List of related resources to include. `property`, `services`, `vacancy-metadata` and `liable-parties` are supported."
										},
										{
											"key": "sort",
											"value": "-created_at",
											"description": "Available sorts: `move_out_date`, `move_in_date`, `move_out_submitted_date`, `move_in_submitted_date`, `created_at`, `updated_at`"
										},
										{
											"key": "page[size]",
											"value": "30",
											"description": "Size of page for paginated results"
										},
										{
											"key": "page[number]",
											"value": "1",
											"description": "Page number of results"
										}
									]
								},
								"description": "Returns a collection of Vacancies.\n\nFor details on the attributes of Vacancies, consult the documentation for vacancies.show\n\n"
							},
							"status": "All vacancies will be returned (with pagination).",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/vnd.api+json"
								}
							],
							"cookie": [],
							"body": "{\r\n  \"data\": [\r\n    {\r\n      \"id\": \"1eb2da51-f393-6daa-90d5-acde48001122\",\r\n      \"type\": \"vacancies\",\r\n      \"relationships\": {\r\n        \"property\": {\r\n          \"links\": {\r\n            \"related\": \"https://sandbox.getnotify.co.uk/api/v1/vacancies/123e4567-e89b-12d3-a456-426614174000/property\"\r\n          }\r\n        },\r\n        \"services\": {\r\n          \"data\": [\r\n            {\r\n              \"type\": \"services\",\r\n              \"id\": \"1eb2da48-4225-6388-a680-acde48001122\"\r\n            }\r\n          ],\r\n          \"links\": {\r\n            \"related\": \"https://sandbox.getnotify.co.uk/api/v1/vacancies/1eb2da51-f393-6daa-90d5-acde48001122/services\"\r\n          }\r\n        },\r\n        \"liable-parties\": {\r\n          \"links\": {\r\n            \"related\": \"https://sandbox.getnotify.co.uk/api/v1/vacancies/123e4567-e89b-12d3-a456-426614174000/liable-parties\"\r\n          }\r\n        },\r\n        \"vacancy-metadata\": {\r\n          \"links\": {\r\n            \"related\": \"https://sandbox.getnotify.co.uk/api/v1/vacancies/1eb2da51-f393-6daa-90d5-acde48001122/vacancy-metadata\"\r\n          }\r\n        }\r\n      },\r\n      \"attributes\": {\r\n        \"move_in_date\": \"2020-03-12\",\r\n        \"product_type\": \"inform_only\",\r\n        \"move_out_date\": \"2020-02-21\",\r\n        \"letting_status\": \"managed\",\r\n        \"move_out_submitted_at\": \"2020-10-21T09:07:25Z\",\r\n        \"move_in_submitted_at\": \"2020-11-21T10:11:33Z\",\r\n        \"state\": \"move_out\",\r\n        \"commission_state\": \"pending\",\r\n        \"tenancy_confirmation\": \"pending\",\r\n        \"expects_move_in\": true,\r\n        \"requires_readings\": false,\r\n        \"has_pending_find\": true,\r\n        \"has_pending_inform\": true,\r\n        \"created_at\": \"2020-10-21T09:07:25Z\",\r\n        \"updated_at\": \"2020-10-23T14:24:03Z\",\r\n        \"deleted_at\": \"2020-10-23T14:24:03Z\"\r\n      },\r\n      \"links\": {\r\n        \"self\": \"https://sandbox.getnotify.co.uk/api/v1/vacancies/1eb2da51-f393-6daa-90d5-acde48001122\"\r\n      }\r\n    }\r\n  ],\r\n  \"links\": {\r\n    \"self\": \"https://sandbox.getnotify.co.uk/api/v1/resource-type?page[number]=3&page[size]=30\",\r\n    \"first\": \"https://sandbox.getnotify.co.uk/api/v1/resource-type?page[number]=1&page[size]=30\",\r\n    \"last\": \"https://sandbox.getnotify.co.uk/api/v1/resource-type?page[number]=5&page[size]=30\",\r\n    \"prev\": \"https://sandbox.getnotify.co.uk/api/v1/resource-type?page[number]=2&page[size]=30\",\r\n    \"next\": \"https://sandbox.getnotify.co.uk/api/v1/resource-type?page[number]=4&page[size]=30\"\r\n  },\r\n  \"included\": [\r\n    {\r\n      \"id\": \"1eb2da48-4225-6388-a680-acde48001122\",\r\n      \"type\": \"services\",\r\n      \"attributes\": {\r\n        \"move_type\": \"move_out\",\r\n        \"utility_type\": \"water\",\r\n        \"state\": \"found\",\r\n        \"status\": \"pending\",\r\n        \"message\": \"The provider has not been informed yet\",\r\n        \"found_at\": \"2020-10-23T14:24:03Z\",\r\n        \"found_by\": \"1eb2da50-04bf-6ae0-a896-acde48001122\",\r\n        \"provider_id\": \"1eb2da0f-524f-6d50-af10-acde48001122\",\r\n        \"provider_name\": \"Northumbrian Water\",\r\n        \"find_abandoned_at\": \"2020-10-23T14:24:03Z\",\r\n        \"find_abandoned_by\": \"1eb2da50-04bf-6ae0-a896-acde48001122\",\r\n        \"find_abandoned_reason\": \"Unable to find water provider\",\r\n        \"created_at\": \"2020-10-23T14:24:03Z\",\r\n        \"updated_at\": \"2020-10-23T14:24:03Z\"\r\n      },\r\n      \"links\": {\r\n        \"self\": \"https://sandbox.getnotify.co.uk/api/v1/vacancies/1eb2da51-f393-6daa-90d5-acde48001122/services/1eb2da48-4225-6388-a680-acde48001122\"\r\n      }\r\n    }\r\n  ],\r\n  \"meta\": {\r\n    \"pagination\": {\r\n      \"total\": 142,\r\n      \"count\": 30,\r\n      \"per_page\": 30,\r\n      \"current_page\": 3,\r\n      \"total_pages\": 5\r\n    }\r\n  }\r\n}"
						}
					]
				},
				{
					"name": "vacancies.store",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"data\": {\r\n    \"type\": \"vacancies\",\r\n    \"attributes\": {\r\n      \"property_id\": \"123e4567-e89b-12d3-a456-426614174000\",\r\n      \"product_type\": \"inform_only\",\r\n      \"move_out_date\": \"2020-02-21\",\r\n      \"letting_status\": \"managed\"\r\n    }\r\n  }\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/vacancies",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"vacancies"
							]
						},
						"description": "Create a new Vacancy resource. `product_type` must be set to `inform_only`.\n\nAttribute              | Type      | Description\n-----------------------| --------- | ------------\n`property_id`**\\***    | string    | A valid `property_id` for a Property in Notify\n`move_out_date`        | string    | The date at which the property became vacant (required when `move_in_date` is omitted).\n`move_in_date`         | string    | The date at which the new tenants are moving in (required when `move_out_date` is omitted).\n`product_type`**\\***   | string    | Must be set to `inform_only`\n`letting_status`       | string    | Optional - can be given as `managed` or `let_only` if known\n`is_new_build`         | boolean   | Optional - can be given as true or false if known\n`number_of_tenants`    | integer   | Optional - can be given as an integer between 1 and 20 inclusive if known\n"
					},
					"response": [
						{
							"name": "Response_201",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"data\": {\r\n    \"type\": \"vacancies\",\r\n    \"attributes\": {\r\n      \"property_id\": \"123e4567-e89b-12d3-a456-426614174000\",\r\n      \"product_type\": \"inform_only\",\r\n      \"move_out_date\": \"2020-02-21\",\r\n      \"letting_status\": \"managed\"\r\n    }\r\n  }\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/vacancies",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vacancies"
									]
								},
								"description": "Create a new Vacancy resource. `product_type` must be set to `inform_only`.\n\nAttribute              | Type      | Description\n-----------------------| --------- | ------------\n`property_id`**\\***    | string    | A valid `property_id` for a Property in Notify\n`move_out_date`        | string    | The date at which the property became vacant (required when `move_in_date` is omitted).\n`move_in_date`         | string    | The date at which the new tenants are moving in (required when `move_out_date` is omitted).\n`product_type`**\\***   | string    | Must be set to `inform_only`\n`letting_status`       | string    | Optional - can be given as `managed` or `let_only` if known\n`is_new_build`         | boolean   | Optional - can be given as true or false if known\n`number_of_tenants`    | integer   | Optional - can be given as an integer between 1 and 20 inclusive if known\n"
							},
							"status": "Returns the created vacancy.",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/vnd.api+json"
								}
							],
							"cookie": [],
							"body": "{\r\n  \"data\": {\r\n    \"id\": \"1eb2da51-f393-6daa-90d5-acde48001122\",\r\n    \"type\": \"vacancies\",\r\n    \"attributes\": {\r\n      \"move_in_date\": \"2020-03-12\",\r\n      \"product_type\": \"inform_only\",\r\n      \"move_out_date\": \"2020-02-21\",\r\n      \"letting_status\": \"managed\",\r\n      \"move_out_submitted_at\": \"2020-10-21T09:07:25Z\",\r\n      \"move_in_submitted_at\": \"2020-11-21T10:11:33Z\",\r\n      \"state\": \"move_out\",\r\n      \"commission_state\": \"pending\",\r\n      \"tenancy_confirmation\": \"pending\",\r\n      \"expects_move_in\": true,\r\n      \"requires_readings\": false,\r\n      \"has_pending_find\": true,\r\n      \"has_pending_inform\": true,\r\n      \"created_at\": \"2020-10-21T09:07:25Z\",\r\n      \"updated_at\": \"2020-10-23T14:24:03Z\",\r\n      \"deleted_at\": \"2020-10-23T14:24:03Z\"\r\n    },\r\n    \"relationships\": {\r\n      \"property\": {\r\n        \"links\": {\r\n          \"related\": \"https://sandbox.getnotify.co.uk/api/v1/vacancies/123e4567-e89b-12d3-a456-426614174000/property\"\r\n        }\r\n      },\r\n      \"services\": {\r\n        \"links\": {\r\n          \"related\": \"https://sandbox.getnotify.co.uk/api/v1/vacancies/1eb2da51-f393-6daa-90d5-acde48001122/services\"\r\n        }\r\n      },\r\n      \"liable-parties\": {\r\n        \"links\": {\r\n          \"related\": \"https://sandbox.getnotify.co.uk/api/v1/vacancies/123e4567-e89b-12d3-a456-426614174000/liable-parties\"\r\n        }\r\n      },\r\n      \"vacancy-metadata\": {\r\n        \"links\": {\r\n          \"related\": \"https://sandbox.getnotify.co.uk/api/v1/vacancies/1eb2da51-f393-6daa-90d5-acde48001122/vacancy-metadata\"\r\n        }\r\n      }\r\n    },\r\n    \"links\": {\r\n      \"self\": \"https://sandbox.getnotify.co.uk/api/v1/vacancies/1eb2da51-f393-6daa-90d5-acde48001122\"\r\n    }\r\n  }\r\n}"
						}
					]
				},
				{
					"name": "vacancy.show",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/vacancies/:vacancyId?include=services",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"vacancies",
								":vacancyId"
							],
							"query": [
								{
									"key": "include",
									"value": "services",
									"description": "List of related resources to include. `property`, `services`, `vacancy-metadata` and `liable-parties` are supported."
								}
							],
							"variable": [
								{
									"key": "vacancyId",
									"value": "1eb2da51-f393-6daa-90d5-acde48001122",
									"description": "ID of the Vacancy"
								}
							]
						},
						"description": "Fetches a single Vacancy resource.\n\nAttribute               | Type      | Description\n------------------------| --------- | ------------\n`product_type`          | string    | Either `inform_only` or `void_cover`. Only `inform_only` Vacancies can be created via this API.\n`move_out_date`         | string    | The date (`Y-m-d`) at which the property became vacant. The start of the void period.\n`move_in_date`          | string    | The date (`Y-m-d`) at which the new tenancy began.\n`move_out_submitted_at` | string    | The date (`Y-m-d`) at which Notify was informed of the `move_out_date`\n`move_in_submitted_at`  | string    | The date (`Y-m-d`) at which Notify was informed of the `move_in_date`\n`state`                 | string    | The current state of the Vacancy. Can be `move_out` or `move_in`. Defaults to `move_out` when created, and changes to `move_in` when successfully updated with a `move_in_date`\n`commission_state`      | string    | The current commission payable state of the Vacancy. Can be `pending`, `qualified` or `unqualified`.\n`tenancy_confirmation`  | string    | The current tenancy confirmation state of the Vacancy. Can be `pending`, `confirmed` or `fallen_through`.\n`has_pending_find`      | boolean   | Will return `false` if the utility providers have been identified for all Services for this Vacancy.\n`has_pending_inform`    | boolean   | Will return `false` if all utility providers have been informed of all requested Services for this Vacancy.\n`requires_readings`     | boolean   | Will return `false` if all required meter readings for this vacancy have been provided.\n`created_at`            | string    | The datetime (UTC) when the Vacancy was added to Notify\n`updated_at`            | string    | The datetime (UTC) when the Vacancy was last updated\n`deleted_at`            | string    | The datetime (UTC) when the Vacancy was soft deleted\n`expects_move_in`       | boolean   | Will return `false` if the agent has indicated that they do not expect there to be a move in.\n`letting_status`        | string    | Will either be `managed`, `let_only` or `NULL`\n`is_new_build`          | boolean   | Will return `true` if the agent has indicated that the property is a new build\n`number_of_tenants`     | integer   | The number of tenants moving into the property. An integer between 1 and 20 inclusive.\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/vacancies/:vacancyId?include=services",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vacancies",
										":vacancyId"
									],
									"query": [
										{
											"key": "include",
											"value": "services",
											"description": "List of related resources to include. `property`, `services`, `vacancy-metadata` and `liable-parties` are supported."
										}
									],
									"variable": [
										{
											"key": "vacancyId",
											"value": "1eb2da51-f393-6daa-90d5-acde48001122",
											"description": "ID of the Vacancy"
										}
									]
								},
								"description": "Fetches a single Vacancy resource.\n\nAttribute               | Type      | Description\n------------------------| --------- | ------------\n`product_type`          | string    | Either `inform_only` or `void_cover`. Only `inform_only` Vacancies can be created via this API.\n`move_out_date`         | string    | The date (`Y-m-d`) at which the property became vacant. The start of the void period.\n`move_in_date`          | string    | The date (`Y-m-d`) at which the new tenancy began.\n`move_out_submitted_at` | string    | The date (`Y-m-d`) at which Notify was informed of the `move_out_date`\n`move_in_submitted_at`  | string    | The date (`Y-m-d`) at which Notify was informed of the `move_in_date`\n`state`                 | string    | The current state of the Vacancy. Can be `move_out` or `move_in`. Defaults to `move_out` when created, and changes to `move_in` when successfully updated with a `move_in_date`\n`commission_state`      | string    | The current commission payable state of the Vacancy. Can be `pending`, `qualified` or `unqualified`.\n`tenancy_confirmation`  | string    | The current tenancy confirmation state of the Vacancy. Can be `pending`, `confirmed` or `fallen_through`.\n`has_pending_find`      | boolean   | Will return `false` if the utility providers have been identified for all Services for this Vacancy.\n`has_pending_inform`    | boolean   | Will return `false` if all utility providers have been informed of all requested Services for this Vacancy.\n`requires_readings`     | boolean   | Will return `false` if all required meter readings for this vacancy have been provided.\n`created_at`            | string    | The datetime (UTC) when the Vacancy was added to Notify\n`updated_at`            | string    | The datetime (UTC) when the Vacancy was last updated\n`deleted_at`            | string    | The datetime (UTC) when the Vacancy was soft deleted\n`expects_move_in`       | boolean   | Will return `false` if the agent has indicated that they do not expect there to be a move in.\n`letting_status`        | string    | Will either be `managed`, `let_only` or `NULL`\n`is_new_build`          | boolean   | Will return `true` if the agent has indicated that the property is a new build\n`number_of_tenants`     | integer   | The number of tenants moving into the property. An integer between 1 and 20 inclusive.\n"
							},
							"status": "Returns a single vacancy.",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/vnd.api+json"
								}
							],
							"cookie": [],
							"body": "{\r\n  \"data\": {\r\n    \"id\": \"1eb2da51-f393-6daa-90d5-acde48001122\",\r\n    \"type\": \"vacancies\",\r\n    \"relationships\": {\r\n      \"property\": {\r\n        \"links\": {\r\n          \"related\": \"https://sandbox.getnotify.co.uk/api/v1/vacancies/123e4567-e89b-12d3-a456-426614174000/property\"\r\n        }\r\n      },\r\n      \"services\": {\r\n        \"data\": [\r\n          {\r\n            \"type\": \"services\",\r\n            \"id\": \"1eb2da48-4225-6388-a680-acde48001122\"\r\n          }\r\n        ],\r\n        \"links\": {\r\n          \"related\": \"https://sandbox.getnotify.co.uk/api/v1/vacancies/1eb2da51-f393-6daa-90d5-acde48001122/services\"\r\n        }\r\n      },\r\n      \"liable-parties\": {\r\n        \"links\": {\r\n          \"related\": \"https://sandbox.getnotify.co.uk/api/v1/vacancies/123e4567-e89b-12d3-a456-426614174000/liable-parties\"\r\n        }\r\n      },\r\n      \"vacancy-metadata\": {\r\n        \"links\": {\r\n          \"related\": \"https://sandbox.getnotify.co.uk/api/v1/vacancies/1eb2da51-f393-6daa-90d5-acde48001122/vacancy-metadata\"\r\n        }\r\n      }\r\n    },\r\n    \"attributes\": {\r\n      \"move_in_date\": \"2020-03-12\",\r\n      \"product_type\": \"inform_only\",\r\n      \"move_out_date\": \"2020-02-21\",\r\n      \"letting_status\": \"managed\",\r\n      \"move_out_submitted_at\": \"2020-10-21T09:07:25Z\",\r\n      \"move_in_submitted_at\": \"2020-11-21T10:11:33Z\",\r\n      \"state\": \"move_out\",\r\n      \"commission_state\": \"pending\",\r\n      \"tenancy_confirmation\": \"pending\",\r\n      \"expects_move_in\": true,\r\n      \"requires_readings\": false,\r\n      \"has_pending_find\": true,\r\n      \"has_pending_inform\": true,\r\n      \"created_at\": \"2020-10-21T09:07:25Z\",\r\n      \"updated_at\": \"2020-10-23T14:24:03Z\",\r\n      \"deleted_at\": \"2020-10-23T14:24:03Z\"\r\n    },\r\n    \"links\": {\r\n      \"self\": \"https://sandbox.getnotify.co.uk/api/v1/vacancies/1eb2da51-f393-6daa-90d5-acde48001122\"\r\n    }\r\n  },\r\n  \"included\": [\r\n    {\r\n      \"id\": \"1eb2da48-4225-6388-a680-acde48001122\",\r\n      \"type\": \"services\",\r\n      \"attributes\": {\r\n        \"move_type\": \"move_out\",\r\n        \"utility_type\": \"water\",\r\n        \"state\": \"found\",\r\n        \"status\": \"pending\",\r\n        \"message\": \"The provider has not been informed yet\",\r\n        \"found_at\": \"2020-10-23T14:24:03Z\",\r\n        \"found_by\": \"1eb2da50-04bf-6ae0-a896-acde48001122\",\r\n        \"provider_id\": \"1eb2da0f-524f-6d50-af10-acde48001122\",\r\n        \"provider_name\": \"Northumbrian Water\",\r\n        \"find_abandoned_at\": \"2020-10-23T14:24:03Z\",\r\n        \"find_abandoned_by\": \"1eb2da50-04bf-6ae0-a896-acde48001122\",\r\n        \"find_abandoned_reason\": \"Unable to find water provider\",\r\n        \"created_at\": \"2020-10-23T14:24:03Z\",\r\n        \"updated_at\": \"2020-10-23T14:24:03Z\"\r\n      },\r\n      \"links\": {\r\n        \"self\": \"https://sandbox.getnotify.co.uk/api/v1/vacancies/1eb2da51-f393-6daa-90d5-acde48001122/services/1eb2da48-4225-6388-a680-acde48001122\"\r\n      }\r\n    }\r\n  ]\r\n}"
						}
					]
				},
				{
					"name": "vacancies.update",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"data\": {\r\n    \"id\": \"1eb2da51-f393-6daa-90d5-acde48001122\",\r\n    \"type\": \"vacancies\",\r\n    \"attributes\": {\r\n      \"move_out_date\": \"2020-02-21\",\r\n      \"move_in_date\": \"2020-03-12\",\r\n      \"letting_status\": \"managed\",\r\n      \"number_of_tenants\": \"2\",\r\n      \"is_new_build\": false\r\n    }\r\n  }\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/vacancies/:vacancyId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"vacancies",
								":vacancyId"
							],
							"variable": [
								{
									"key": "vacancyId",
									"value": "1eb2da51-f393-6daa-90d5-acde48001122",
									"description": "ID of the Vacancy"
								}
							]
						},
						"description": "Update a Vacancy resource.\n\nWe require at least one `move_in` type Liable Party to have been created on the Vacancy before the `move_in_date` can be set.\nAttempting to update the Vacancy with a `move_in_date` before this Liable Party has been added will result in an error.\nUpdating a Vacancy with a 'move_in_date' is a required step before 'move_in' type Services can be created. See 'Services' section for more details.\n\nIt is also possible to update the dates on the vacancy if the date that the property is becoming vacant or the date that the tenant is moving in has changed.\n\nIn order to prevent us sending providers outdated information, we have a hard limit of only allowing dates to be updated from up to 2 months in the past.\n\nFor example, if the original `move_in_date` given was `2022-08-01`, the last day in which this could be updated is `2022-10-01`.\n\nBoth dates cannot be edited at the same time on a vacancy. If you wish to edit both the move_out_date and move_in_date, this should be performed as two separate requests\n\nWe also allow for the updating of the `letting_status` of the vacancy whether this is fully mananged, or let only. As well as the `number_of_tenants` and whether the property `is_new_build` or not.\n\nVacancies with a move out and a move in set can be 'rolled back' to a move out only state by patching the `state` to `move_out`. This will result in us sending revocation messages for any move in services for which we have already informed the providers.\n\nFinally, vacancies can be deleted from our system by patching a 'deletion_reason' - this can be performed on any vacancy where the commission related to it has not been withdrawn by the user.\n\nDeleting a vacancy will result in us halting any communication with providers and sending revocation messages to any providers that we have already contacted, informing them that our previous communication should be disregarded.\n\nAttribute              | Type      | Description\n-----------------------| --------- | ------------\n`move_out_date`        | string    | The date (`Y-m-d`) on which the property becomes vacant. Must be before or equal to the `move_in_date`, if it is currently set on the Vacancy.\n`move_in_date`         | string    | The date (`Y-m-d`) when the new tenant(s) will be moving in. Must be after or equal to the `move_out_date` currently set on the Vacancy. Must have at least one `move_in` type Liable Party created.\n`letting_status`       | string    | Optional - can be given as `managed` or `let_only` if known\n`is_new_build`         | boolean   | Optional - can be given as true or false if known\n`number_of_tenants`    | integer   | Optional - can be given as an integer between 1 and 20 inclusive if known\n`state`                | string    | Optional - on a `move_in` vacancy with a move out, this can be set to `move_out` to roll back the vacancy to a move out only state.\n`deletion_reason`      | string    | Optional - must be provided to delete a vacancy and should describe why the vacancy has been deleted. Max 255 characters.\n"
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"data\": {\r\n    \"id\": \"1eb2da51-f393-6daa-90d5-acde48001122\",\r\n    \"type\": \"vacancies\",\r\n    \"attributes\": {\r\n      \"move_out_date\": \"2020-02-21\",\r\n      \"move_in_date\": \"2020-03-12\",\r\n      \"letting_status\": \"managed\",\r\n      \"number_of_tenants\": \"2\",\r\n      \"is_new_build\": false\r\n    }\r\n  }\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/vacancies/:vacancyId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vacancies",
										":vacancyId"
									],
									"variable": [
										{
											"key": "vacancyId",
											"value": "1eb2da51-f393-6daa-90d5-acde48001122",
											"description": "ID of the Vacancy"
										}
									]
								},
								"description": "Update a Vacancy resource.\n\nWe require at least one `move_in` type Liable Party to have been created on the Vacancy before the `move_in_date` can be set.\nAttempting to update the Vacancy with a `move_in_date` before this Liable Party has been added will result in an error.\nUpdating a Vacancy with a 'move_in_date' is a required step before 'move_in' type Services can be created. See 'Services' section for more details.\n\nIt is also possible to update the dates on the vacancy if the date that the property is becoming vacant or the date that the tenant is moving in has changed.\n\nIn order to prevent us sending providers outdated information, we have a hard limit of only allowing dates to be updated from up to 2 months in the past.\n\nFor example, if the original `move_in_date` given was `2022-08-01`, the last day in which this could be updated is `2022-10-01`.\n\nBoth dates cannot be edited at the same time on a vacancy. If you wish to edit both the move_out_date and move_in_date, this should be performed as two separate requests\n\nWe also allow for the updating of the `letting_status` of the vacancy whether this is fully mananged, or let only. As well as the `number_of_tenants` and whether the property `is_new_build` or not.\n\nVacancies with a move out and a move in set can be 'rolled back' to a move out only state by patching the `state` to `move_out`. This will result in us sending revocation messages for any move in services for which we have already informed the providers.\n\nFinally, vacancies can be deleted from our system by patching a 'deletion_reason' - this can be performed on any vacancy where the commission related to it has not been withdrawn by the user.\n\nDeleting a vacancy will result in us halting any communication with providers and sending revocation messages to any providers that we have already contacted, informing them that our previous communication should be disregarded.\n\nAttribute              | Type      | Description\n-----------------------| --------- | ------------\n`move_out_date`        | string    | The date (`Y-m-d`) on which the property becomes vacant. Must be before or equal to the `move_in_date`, if it is currently set on the Vacancy.\n`move_in_date`         | string    | The date (`Y-m-d`) when the new tenant(s) will be moving in. Must be after or equal to the `move_out_date` currently set on the Vacancy. Must have at least one `move_in` type Liable Party created.\n`letting_status`       | string    | Optional - can be given as `managed` or `let_only` if known\n`is_new_build`         | boolean   | Optional - can be given as true or false if known\n`number_of_tenants`    | integer   | Optional - can be given as an integer between 1 and 20 inclusive if known\n`state`                | string    | Optional - on a `move_in` vacancy with a move out, this can be set to `move_out` to roll back the vacancy to a move out only state.\n`deletion_reason`      | string    | Optional - must be provided to delete a vacancy and should describe why the vacancy has been deleted. Max 255 characters.\n"
							},
							"status": "Vacancy successfully updated.",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/vnd.api+json"
								}
							],
							"cookie": [],
							"body": "{\r\n  \"data\": {\r\n    \"id\": \"1eb2da51-f393-6daa-90d5-acde48001122\",\r\n    \"type\": \"vacancies\",\r\n    \"attributes\": {\r\n      \"move_in_date\": \"2020-03-12\",\r\n      \"product_type\": \"inform_only\",\r\n      \"move_out_date\": \"2020-02-21\",\r\n      \"letting_status\": \"managed\",\r\n      \"move_out_submitted_at\": \"2020-10-21T09:07:25Z\",\r\n      \"move_in_submitted_at\": \"2020-11-21T10:11:33Z\",\r\n      \"state\": \"move_out\",\r\n      \"commission_state\": \"pending\",\r\n      \"tenancy_confirmation\": \"pending\",\r\n      \"expects_move_in\": true,\r\n      \"requires_readings\": false,\r\n      \"has_pending_find\": true,\r\n      \"has_pending_inform\": true,\r\n      \"created_at\": \"2020-10-21T09:07:25Z\",\r\n      \"updated_at\": \"2020-10-23T14:24:03Z\",\r\n      \"deleted_at\": \"2020-10-23T14:24:03Z\"\r\n    },\r\n    \"relationships\": {\r\n      \"property\": {\r\n        \"links\": {\r\n          \"related\": \"https://sandbox.getnotify.co.uk/api/v1/vacancies/123e4567-e89b-12d3-a456-426614174000/property\"\r\n        }\r\n      },\r\n      \"services\": {\r\n        \"links\": {\r\n          \"related\": \"https://sandbox.getnotify.co.uk/api/v1/vacancies/1eb2da51-f393-6daa-90d5-acde48001122/services\"\r\n        }\r\n      },\r\n      \"liable-parties\": {\r\n        \"links\": {\r\n          \"related\": \"https://sandbox.getnotify.co.uk/api/v1/vacancies/123e4567-e89b-12d3-a456-426614174000/liable-parties\"\r\n        }\r\n      },\r\n      \"vacancy-metadata\": {\r\n        \"links\": {\r\n          \"related\": \"https://sandbox.getnotify.co.uk/api/v1/vacancies/1eb2da51-f393-6daa-90d5-acde48001122/vacancy-metadata\"\r\n        }\r\n      }\r\n    },\r\n    \"links\": {\r\n      \"self\": \"https://sandbox.getnotify.co.uk/api/v1/vacancies/1eb2da51-f393-6daa-90d5-acde48001122\"\r\n    }\r\n  }\r\n}"
						}
					]
				}
			],
			"description": "Vacancies represent the void period of a property, or the date the Tenancy starts or ends.\n\n- A void period means the Vacancy has both a `move_out_date` and a `move_in_date`; the end of one Tenancy and the start of another. These two dates together comprise the 'void period'.\n- Supplying only a `move_in_date` will create a move-in-only Vacancy.\n\nA valid Property ID is required in order to create any type of Vacancy.\n\nIt is common for a Notify user to be in possession of a `move_out_date` before the `move_in_date` is known. For this reason, a Vacancy should be created with a `move_out_date`, and then later updated with a `move_in_date`.\nIf only the `move_in_date` is known, the Vacancy can be created with just this value.\n\nWhen creating a move-in-only Vacancy it is vital that at least one `move_in` type Liable Party is also associated with it. If this is not provided will not be able to inform utility providers of the tenancy changes.\n\nWhen creating a void period Vacancy, we require at least one `move_in` type Liable Party to have been created on the Vacancy before the `move_in_date` can be set. Attempting to update the Vacancy with a `move_in_date` before this Liable Party has been added will result in an error. Liable Party information for the void period aka `move_out` Liable Party information is optional.\n\nIt is important to provide timely information, when both creating and updating a Vacancy."
		},
		{
			"name": "vacancy-metadata",
			"item": [
				{
					"name": "vacancies.vacancy-metadata.index",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/vacancies/:vacancyId/vacancy-metadata?sort=-created_at&page[size]=30&page[number]=1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"vacancies",
								":vacancyId",
								"vacancy-metadata"
							],
							"query": [
								{
									"key": "sort",
									"value": "-created_at",
									"description": "Available sorts: `created_at`, `updated_at`"
								},
								{
									"key": "page[size]",
									"value": "30",
									"description": "Size of page for paginated results"
								},
								{
									"key": "page[number]",
									"value": "1",
									"description": "Page number of results"
								}
							],
							"variable": [
								{
									"key": "vacancyId",
									"value": "1eb2da51-f393-6daa-90d5-acde48001122",
									"description": "ID of the Vacancy"
								}
							]
						},
						"description": "Returns a collection of metadata."
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/vacancies/:vacancyId/vacancy-metadata?sort=-created_at&page[size]=30&page[number]=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vacancies",
										":vacancyId",
										"vacancy-metadata"
									],
									"query": [
										{
											"key": "sort",
											"value": "-created_at",
											"description": "Available sorts: `created_at`, `updated_at`"
										},
										{
											"key": "page[size]",
											"value": "30",
											"description": "Size of page for paginated results"
										},
										{
											"key": "page[number]",
											"value": "1",
											"description": "Page number of results"
										}
									],
									"variable": [
										{
											"key": "vacancyId",
											"value": "1eb2da51-f393-6daa-90d5-acde48001122",
											"description": "ID of the Vacancy"
										}
									]
								},
								"description": "Returns a collection of metadata."
							},
							"status": "All metadata will be returned (with pagination).",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/vnd.api+json"
								}
							],
							"cookie": [],
							"body": "{\r\n  \"data\": [\r\n    {\r\n      \"id\": \"1eb2d9f6-dcf3-6a9c-8830-acde48001122\",\r\n      \"type\": \"vacancy-metadata\",\r\n      \"attributes\": {\r\n        \"meta_key\": \"email\",\r\n        \"meta_value\": \"joe.bloggs@hotmail.com\",\r\n        \"created_at\": \"2020-10-21T09:07:25Z\",\r\n        \"updated_at\": \"2020-10-23T14:24:03Z\",\r\n        \"deleted_at\": \"2020-10-23T14:24:03Z\"\r\n      },\r\n      \"links\": {\r\n        \"self\": \"https://sandbox.getnotify.co.uk/api/v1/vacancies/1eb2da51-f393-6daa-90d5-acde48001122/vacancy-metadata/1eb2d9f6-dcf3-6a9c-8830-acde48001122\"\r\n      }\r\n    }\r\n  ],\r\n  \"links\": {\r\n    \"self\": \"https://sandbox.getnotify.co.uk/api/v1/resource-type?page[number]=3&page[size]=30\",\r\n    \"first\": \"https://sandbox.getnotify.co.uk/api/v1/resource-type?page[number]=1&page[size]=30\",\r\n    \"last\": \"https://sandbox.getnotify.co.uk/api/v1/resource-type?page[number]=5&page[size]=30\",\r\n    \"prev\": \"https://sandbox.getnotify.co.uk/api/v1/resource-type?page[number]=2&page[size]=30\",\r\n    \"next\": \"https://sandbox.getnotify.co.uk/api/v1/resource-type?page[number]=4&page[size]=30\"\r\n  },\r\n  \"meta\": {\r\n    \"pagination\": {\r\n      \"total\": 142,\r\n      \"count\": 30,\r\n      \"per_page\": 30,\r\n      \"current_page\": 3,\r\n      \"total_pages\": 5\r\n    }\r\n  }\r\n}"
						}
					]
				},
				{
					"name": "vacancies.vacancy-metadata.store",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"data\": {\r\n    \"type\": \"vacancy-metadata\",\r\n    \"attributes\": {\r\n      \"meta_key\": \"email\",\r\n      \"meta_value\": \"joe.bloggs@hotmail.com\"\r\n    }\r\n  }\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/vacancies/:vacancyId/vacancy-metadata",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"vacancies",
								":vacancyId",
								"vacancy-metadata"
							],
							"variable": [
								{
									"key": "vacancyId",
									"value": "1eb2da51-f393-6daa-90d5-acde48001122",
									"description": "ID of the Vacancy"
								}
							]
						},
						"description": "Create a new Vacancy Metadata resource. `meta_key` must be unique for the given vacancy.\n\nAttribute              | Type      | Description\n-----------------------| --------- | ------------\n`meta_key`**\\***       | string    | A unique name for the metadata item.\n`meta_value`**\\***     | string    | The value of the metadata item.\n    "
					},
					"response": [
						{
							"name": "Response_201",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"data\": {\r\n    \"type\": \"vacancy-metadata\",\r\n    \"attributes\": {\r\n      \"meta_key\": \"email\",\r\n      \"meta_value\": \"joe.bloggs@hotmail.com\"\r\n    }\r\n  }\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/vacancies/:vacancyId/vacancy-metadata",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vacancies",
										":vacancyId",
										"vacancy-metadata"
									],
									"variable": [
										{
											"key": "vacancyId",
											"value": "1eb2da51-f393-6daa-90d5-acde48001122",
											"description": "ID of the Vacancy"
										}
									]
								},
								"description": "Create a new Vacancy Metadata resource. `meta_key` must be unique for the given vacancy.\n\nAttribute              | Type      | Description\n-----------------------| --------- | ------------\n`meta_key`**\\***       | string    | A unique name for the metadata item.\n`meta_value`**\\***     | string    | The value of the metadata item.\n    "
							},
							"status": "Returns the created vacancy metadata.",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/vnd.api+json"
								}
							],
							"cookie": [],
							"body": "{\r\n  \"data\": {\r\n    \"id\": \"1eb2d9f6-dcf3-6a9c-8830-acde48001122\",\r\n    \"type\": \"vacancy-metadata\",\r\n    \"attributes\": {\r\n      \"meta_key\": \"email\",\r\n      \"meta_value\": \"joe.bloggs@hotmail.com\",\r\n      \"created_at\": \"2020-10-21T09:07:25Z\",\r\n      \"updated_at\": \"2020-10-23T14:24:03Z\",\r\n      \"deleted_at\": \"2020-10-23T14:24:03Z\"\r\n    },\r\n    \"links\": {\r\n      \"self\": \"https://sandbox.getnotify.co.uk/api/v1/vacancies/1eb2da51-f393-6daa-90d5-acde48001122/vacancy-metadata/1eb2d9f6-dcf3-6a9c-8830-acde48001122\"\r\n    }\r\n  }\r\n}"
						}
					]
				},
				{
					"name": "vacancies.vacancy-metadata.show",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/vacancies/:vacancyId/vacancy-metadata/:vacancyMetadataId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"vacancies",
								":vacancyId",
								"vacancy-metadata",
								":vacancyMetadataId"
							],
							"variable": [
								{
									"key": "vacancyId",
									"value": "1eb2da51-f393-6daa-90d5-acde48001122",
									"description": "ID of the Vacancy"
								},
								{
									"key": "vacancyMetadataId",
									"value": "1eb2d9f6-dcf3-6a9c-8830-acde48001122",
									"description": "ID of the Vacancy Metadata"
								}
							]
						},
						"description": "Fetches a single Vacancy Metadata resource.\n\nAttribute               | Type      | Description\n------------------------| --------- | ------------\n`meta_key`              | string    | The unique name for the metadata item.\n`meta_value`            | string    | The value of the metadata item.\n`created_at`            | string    | The datetime (UTC) when the Vacancy Metadata was added to Notify\n`updated_at`            | string    | The datetime (UTC) when the Vacancy Metadata was last updated\n`deleted_at`            | string    | The datetime (UTC) when the Vacancy Metadata was soft deleted\n    "
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/vacancies/:vacancyId/vacancy-metadata/:vacancyMetadataId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vacancies",
										":vacancyId",
										"vacancy-metadata",
										":vacancyMetadataId"
									],
									"variable": [
										{
											"key": "vacancyId",
											"value": "1eb2da51-f393-6daa-90d5-acde48001122",
											"description": "ID of the Vacancy"
										},
										{
											"key": "vacancyMetadataId",
											"value": "1eb2d9f6-dcf3-6a9c-8830-acde48001122",
											"description": "ID of the Vacancy Metadata"
										}
									]
								},
								"description": "Fetches a single Vacancy Metadata resource.\n\nAttribute               | Type      | Description\n------------------------| --------- | ------------\n`meta_key`              | string    | The unique name for the metadata item.\n`meta_value`            | string    | The value of the metadata item.\n`created_at`            | string    | The datetime (UTC) when the Vacancy Metadata was added to Notify\n`updated_at`            | string    | The datetime (UTC) when the Vacancy Metadata was last updated\n`deleted_at`            | string    | The datetime (UTC) when the Vacancy Metadata was soft deleted\n    "
							},
							"status": "Returns a single vacancy metadata item.",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/vnd.api+json"
								}
							],
							"cookie": [],
							"body": "{\r\n  \"data\": {\r\n    \"id\": \"1eb2d9f6-dcf3-6a9c-8830-acde48001122\",\r\n    \"type\": \"vacancy-metadata\",\r\n    \"attributes\": {\r\n      \"meta_key\": \"email\",\r\n      \"meta_value\": \"joe.bloggs@hotmail.com\",\r\n      \"created_at\": \"2020-10-21T09:07:25Z\",\r\n      \"updated_at\": \"2020-10-23T14:24:03Z\",\r\n      \"deleted_at\": \"2020-10-23T14:24:03Z\"\r\n    },\r\n    \"links\": {\r\n      \"self\": \"https://sandbox.getnotify.co.uk/api/v1/vacancies/1eb2da51-f393-6daa-90d5-acde48001122/vacancy-metadata/1eb2d9f6-dcf3-6a9c-8830-acde48001122\"\r\n    }\r\n  }\r\n}"
						}
					]
				},
				{
					"name": "vacancies.vacancy-metadata.update",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"data\": {\r\n    \"id\": \"1eb2d9f6-dcf3-6a9c-8830-acde48001122\",\r\n    \"type\": \"vacancy-metadata\",\r\n    \"attributes\": {\r\n      \"meta_value\": \"joe.bloggs@hotmail.com\"\r\n    }\r\n  }\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/vacancies/:vacancyId/vacancy-metadata/:vacancyMetadataId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"vacancies",
								":vacancyId",
								"vacancy-metadata",
								":vacancyMetadataId"
							],
							"variable": [
								{
									"key": "vacancyId",
									"value": "1eb2da51-f393-6daa-90d5-acde48001122",
									"description": "ID of the Vacancy"
								},
								{
									"key": "vacancyMetadataId",
									"value": "1eb2d9f6-dcf3-6a9c-8830-acde48001122",
									"description": "ID of the Vacancy Metadata"
								}
							]
						},
						"description": "Update a Vacancy Metadata resource.\nAttribute              | Type      | Description\n-----------------------| --------- | ------------\n`meta_value`**\\***     | string    | The value of the metadata item.\n    "
					},
					"response": [
						{
							"name": "Response_200",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"data\": {\r\n    \"id\": \"1eb2d9f6-dcf3-6a9c-8830-acde48001122\",\r\n    \"type\": \"vacancy-metadata\",\r\n    \"attributes\": {\r\n      \"meta_value\": \"joe.bloggs@hotmail.com\"\r\n    }\r\n  }\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/vacancies/:vacancyId/vacancy-metadata/:vacancyMetadataId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vacancies",
										":vacancyId",
										"vacancy-metadata",
										":vacancyMetadataId"
									],
									"variable": [
										{
											"key": "vacancyId",
											"value": "1eb2da51-f393-6daa-90d5-acde48001122",
											"description": "ID of the Vacancy"
										},
										{
											"key": "vacancyMetadataId",
											"value": "1eb2d9f6-dcf3-6a9c-8830-acde48001122",
											"description": "ID of the Vacancy Metadata"
										}
									]
								},
								"description": "Update a Vacancy Metadata resource.\nAttribute              | Type      | Description\n-----------------------| --------- | ------------\n`meta_value`**\\***     | string    | The value of the metadata item.\n    "
							},
							"status": "Vacancy successfully updated.",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/vnd.api+json"
								}
							],
							"cookie": [],
							"body": "{\r\n  \"data\": {\r\n    \"id\": \"1eb2d9f6-dcf3-6a9c-8830-acde48001122\",\r\n    \"type\": \"vacancy-metadata\",\r\n    \"attributes\": {\r\n      \"meta_key\": \"email\",\r\n      \"meta_value\": \"joe.bloggs@hotmail.com\",\r\n      \"created_at\": \"2020-10-21T09:07:25Z\",\r\n      \"updated_at\": \"2020-10-23T14:24:03Z\",\r\n      \"deleted_at\": \"2020-10-23T14:24:03Z\"\r\n    },\r\n    \"links\": {\r\n      \"self\": \"https://sandbox.getnotify.co.uk/api/v1/vacancies/1eb2da51-f393-6daa-90d5-acde48001122/vacancy-metadata/1eb2d9f6-dcf3-6a9c-8830-acde48001122\"\r\n    }\r\n  }\r\n}"
						}
					]
				}
			],
			"description": "Vacancy Metadata represents additional information regarding a vacancy.\n\nThe main purpose of vacancy metadata is for you to share extra information regarding a vacancy with our team.\n\nThis information will NOT be visible to agents via the dashboard and will only be seen by our admins."
		}
	],
	"auth": {
		"type": "oauth2",
		"oauth2": [
			{
				"key": "authUrl",
				"value": "https://sandbox.getnotify.co.uk/oauth/authorize",
				"type": "string"
			},
			{
				"key": "accessTokenUrl",
				"value": "https://sandbox.getnotify.co.uk/oauth/token",
				"type": "string"
			},
			{
				"key": "scope",
				"value": "",
				"type": "string"
			},
			{
				"key": "grant_type",
				"value": "authorization_code",
				"type": "string"
			}
		]
	},
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://sandbox.getnotify.co.uk/api/v1"
		}
	]
}